{
  "ProtoUnits": {
    "Attributes": [
      {
        "name": "Icon",
        "description": "WPF path for unit icon, relative to game\\ui_myth"
      },
      {
        "name": "MinimapIcon",
        "description": "Path to minimap icon texture, relative to the Art folder (game\\art)."
      },
      {
        "name": "MinimapColor",
        "description": "ProtoUnit minimap colour. Takes RGB colour parameters, which expect floating point values in the [0.0, 1.0] interval.",
        "syntax": "<MinimapColor red='1.0000' blue='1.0000' green='1.0000'></MinimapColor>",
        "parameters": []
      },
      {
        "name": "MinimapSize",
        "description": "Size of minimap indicator. Defaults to 2.0, if not set."
      },
      {
        "name": "AnimFile",
        "description": "Path to protoUnit animfile, relative to the Art folder (game\\art). Can take up a culture parameter for setting culture-specific animfiles."
      },
      {
        "name": "SoundSetFile",
        "description": "Path to protoUnit soundset file, relative to the Sound folder (game\\sound)."
      },
      {
        "name": "PlacementFile",
        "description": "Path to protoUnit placementRules file, relative to game\\data\\gameplay\\placement_rules."
      },
      {
        "name": "DisplayNameID",
        "description": "String ID for protoUnit displayed name."
      },
      {
        "name": "EditorNameID",
        "description": "String ID for protoUnit displayed name in Scenario Editor listing."
      },
      {
        "name": "RolloverTextID",
        "description": "String ID for protoUnit long rollover."
      },
      {
        "name": "ShortRolloverTextID",
        "description": "String ID for protoUnit short rollover."
      },
      {
        "name": "WorldToolTipTextID",
        "description": "Deprecated.",
        "deprecated": true
      },
      {
        "name": "GoodAgainstStringID",
        "description": "String ID for protoUnit “Good Against” text to be displayed in long rollover."
      },
      {
        "name": "BadAgainstStringID",
        "description": "String ID for protoUnit “Bad Against” text to be displayed in long rollover."
      },
      {
        "name": "MaxHitpoints",
        "description": "ProtoUnit maximum amount of hitpoints"
      },
      {
        "name": "InitialHitpoints",
        "description": "ProtoUnit initial amount of hitpoints."
      },
      {
        "name": "MaxShieldPoints",
        "description": "ProtoUnit maximum amount of shield points"
      },
      {
        "name": "InitialShieldPoints",
        "description": "ProtoUnit initial amount of shield points."
      },
      {
        "name": "UnitRegen",
        "description": "Defines individual protoUnit regeneration rate. The supported parameters are listed as follows:",
        "syntax": "",
        "parameters": [
          {
            "name": "idleTimeout",
            "description": "Minimum amount of time in seconds a unit has to be idle before regeneration begins."
          },
          {
            "name": "damageTimeout",
            "description": "Minimum amount of time in seconds since the last time the unit received any damage before regeneration begins."
          },
          {
            "name": "rateLimit",
            "description": "Minimum unit hitpoint ratio that can be reached through degeneration, when setting regeneration rate to a negative value."
          }
        ]
      },
      {
        "name": "UnitShieldRegen",
        "description": "Defines protoUnit regeneration rate for shield points. Takes up the same parameters as UnitRegen."
      },
      {
        "name": "LOS",
        "description": "ProtoUnit Line of Sight."
      },
      {
        "name": "SharedSelectionUnitTypes",
        "description": "List of unitTypes which will share double-selection with this unit.",
        "syntax": "<SharedSelectionUnitTypes><UnitType>KuafuHero</UnitType></SharedSelectionUnitTypes>",
        "parameters": []
      },
      {
        "name": "MaxVelocity",
        "description": "ProtoUnit base speed value."
      },
      {
        "name": "MaxRunVelocity",
        "description": "Used in calculations that define when Run animations should be used by the unit, when applicable. If set to a value greater than MaxVelocity and unit has proper Run animations set within its animfile, run animation will be used once the unit’s current speed exceeds the average between MaxVelocity and MaxRunVelocity."
      },
      {
        "name": "InitialShading",
        "description": "Sets the initial shading factor to be applied to the unit. Takes the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Shading type to be applied. Can be set to bronze, stone, frost, burning and gold."
          },
          {
            "name": "factor",
            "description": "Factor to be used for the provided shading type."
          }
        ]
      },
      {
        "name": "DamageShading",
        "description": "Sets up data for progressive shading tied to unit damage. Takes the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Shading type to be applied. Can be set to bronze, stone, frost, burning and gold."
          },
          {
            "name": "threshold",
            "description": "Hitpoint threshold below which shading will be progressively applied."
          },
          {
            "name": "rate",
            "description": "Value by which the factor for the providing shading type will be increased according to a defined time interval."
          },
          {
            "name": "time",
            "description": "Time interval in milliseconds in which the factor for the provided shading type will be increased by the value given through the rate attribute, until reaching 1.0 shading factor."
          }
        ]
      },
      {
        "name": "MovementType",
        "description": "Defines which terrains the unit can move through."
      },
      {
        "name": "TurnRate",
        "description": "ProtoUnit turning/rotation rate."
      },
      {
        "name": "HeightHitpointBarOffset",
        "description": "Offset for default hitpoint bar position."
      },
      {
        "name": "UnitAIType",
        "description": "ProtoUnit UnitAI type. Used for auto-attack behaviour, target selection, and other features related to overall unitAI handling."
      },
      {
        "name": "InitialUnitAIStance",
        "description": "Defines the initial stance for the UnitAI (Aggressive, Defensive, Passive or StandGround)."
      },
      {
        "name": "FormationOrder",
        "description": "Order in which unit is to be placed on formations. Cannot be set to a value greater than 5."
      },
      {
        "name": "PopulationCount",
        "description": "ProtoUnit population count."
      },
      {
        "name": "TrainPoints",
        "description": "Total amount of time in seconds required to train protoUnit."
      },
      {
        "name": "Cost",
        "description": "ProtoUnit cost. Takes one parameter, resourcetype, which sets the resource type for each entry."
      },
      {
        "name": "CostEscalation",
        "description": "Multiplicative factor to be applied over protoUnit’s cost for every instance of the same protoUnit queued or in the map."
      },
      {
        "name": "InitialResource",
        "description": "Initial amount of resources carried by the unit. Takes one parameter, resourceType, which sets the resource type",
        "syntax": "<InitialResource resourceType='Food'>50.0000</InitialResource>",
        "parameters": []
      },
      {
        "name": "CarryCapacity",
        "description": "Maximum amount of resources that can be carried by the unit. Takes one parameter, resourceType, which sets the resource type. For units that don’t carry resources, sets the resource types it’s allowed to gather from when performing a Hunting action.",
        "syntax": "<CarryCapacity resourceType='Food'>500.0000</CarryCapacity>",
        "parameters": []
      },
      {
        "name": "PriorityBonusFactor",
        "description": "Bonus factor to be added to the resource priority factor of a potential gathering target, when querying for new resource deposits after constructing or being tasked to a dropsite or depleting a resource deposit. Takes one parameter, resourceType, which sets the resource type.",
        "syntax": "<PriorityBonusFactor resourceType='Wood'>30.0000</PriorityBonusFactor>",
        "parameters": []
      },
      {
        "name": "KillReward",
        "description": "Resources to be granted when killing this unit to the player who dealt the killing blow. Split between all enemies of the owner when deleting the unit. Takes one parameter, resourceType, which sets the resource type",
        "syntax": "<KillReward resourceType='Gold'>300.0</KillReward>",
        "parameters": []
      },
      {
        "name": "ResourceReturn",
        "description": "Amount of resources to be given to the player in case the unit or building is destroyed. Resources aren’t given if the unit or building was deleted, unless if the ApplyResourceReturnIfDeleted protoUnit flag is set. Takes one parameter, resourceType, which sets the resource type",
        "syntax": "<ResourceReturn resourceType='Gold'>100.0000</ResourceReturn>",
        "parameters": []
      },
      {
        "name": "ResourceReturnRate",
        "description": "Amount of resources to be given to the player, as a rate of the current cost of the unit, in case the unit or building is destroyed. Resources aren’t given if the unit or building was deleted, unless if the ApplyResourceReturnIfDeleted protoUnit flag is set. If the protoUnit flag ResourceReturnRateTotalCost is set, it will account for the total cost of the unit in resources.",
        "syntax": "<ResourceReturnRate resourceType='Gold'>0.5000</ResourceReturnRate>",
        "parameters": []
      },
      {
        "name": "ResourceSubType",
        "description": "ProtoUnit resource subtype. Used for defining the gather cursor and by resource tasking code."
      },
      {
        "name": "GathererLimit",
        "description": "Maximum number of units that can gather from this unit at a given time."
      },
      {
        "name": "BuilderLimit",
        "description": "Maximum number of units that can build this unit when at foundation state at a given time."
      },
      {
        "name": "ResourcePriority",
        "description": "Factor value for resource prioritization logic, as used when automatically tasking units to gather resources after constructing a dropsite or depleting a resource deposit."
      },
      {
        "name": "WorkerSoftLimit",
        "description": "Soft worker limit for resource prioritization logic, as used when automatically tasking units to gather resources after constructing a dropsite or depleting a resource deposit."
      },
      {
        "name": "WeightClass",
        "description": "Relative weight used for pathing pushing logic. Units with a lower WeightClass value cannot push units with higher values."
      },
      {
        "name": "SizeClass",
        "description": "Used for logic for actions that perform knockback effects, which may restrict those to units with SizeClass below a provided value within ProtoAction data."
      },
      {
        "name": "OnDiscoverLOS",
        "description": "LOS radius to be temporarily revealed upon discovering this unit."
      },
      {
        "name": "ContainedSpeedBonus",
        "description": "Defines how much each garrisoned unit contributes to its speed. Applied linearly."
      },
      {
        "name": "ObstructionRadiusX",
        "description": "ProtoUnit obstruction radius in the X axis."
      },
      {
        "name": "ObstructionRadiusZ",
        "description": "ProtoUnit obstruction radius in the Z axis."
      },
      {
        "name": "ObstructionRadius",
        "description": "ProtoUnit obstruction radius in both X and Z axes."
      },
      {
        "name": "SelectionRadiusX",
        "description": "ProtoUnit in-game selection circle radius in the X axis. Defaults to obstruction radius value for that axis if unset."
      },
      {
        "name": "SelectionRadiusZ",
        "description": "ProtoUnit in-game selection circle radius in the Z axis. Defaults to obstruction radius value for that axis if unset."
      },
      {
        "name": "AllowedHeightVariance",
        "description": "Maximum elevation height variance allowed over the area where the protoUnit is to be placed."
      },
      {
        "name": "WanderDistance",
        "description": "Wandering distance value used by huntable herds."
      },
      {
        "name": "AutoBuildRate",
        "description": "Rate (buildpoints per second) in which building will be auto-build."
      },
      {
        "name": "BuildPoints",
        "description": "Total amount of time in seconds required to build protoUnit, when working at a 1.0 Work Rate over the Foundation."
      },
      {
        "name": "BuildingWorkRate",
        "description": "Work rate value used by training, researching and maintaining (auto- spawn) actions."
      },
      {
        "name": "TrainingRate",
        "description": "Work rate multiplier for training actions."
      },
      {
        "name": "ResearchRate",
        "description": "Work rate multiplier for research actions."
      },
      {
        "name": "RechargeTime",
        "description": "Recharge time used by Charged Actions/Abilities."
      },
      {
        "name": "ChargeUsageTime",
        "description": "Amount of time in seconds in which the main Charged Action is usable, after it’s first triggered."
      },
      {
        "name": "AuxRechargeTime",
        "description": "Recharge time used by Secondary Charged Actions/Abilities."
      },
      {
        "name": "AuxChargeUsageTime",
        "description": "Amount of time in seconds in which the secondary Charged Action is usable, after it’s first triggered."
      },
      {
        "name": "Recharge",
        "description": "Recharge value used by the Primary Charged Actions/Abilities, which, unlike the RechargeTime attribute, can be tied to variables other than elapsed time. Takes two parameters, type and init, which are described as follows:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Defines the variable to be taken in account for charging. Can be set to Time (elapsed time, same behaviour as RechargeTime), Kills (number of kills), Damage (total amount of damage inflicted) or Attacks (number of hits inflicted by the unit."
          },
          {
            "name": "init",
            "description": "Should be set to 1 if Charged Ability is supposed to start charged and ready to use as soon as the unit is created, or 0, otherwise. Set to 1 by default."
          }
        ]
      },
      {
        "name": "AuxRecharge",
        "description": "Recharge value used by the Secondary Charged Actions/Abilities, which, unlike the AuxRechargeTime attribute, can be tied to variables other than elapsed time. Takes the same parameters as Recharge."
      },
      {
        "name": "RechargeIncludeTypes",
        "description": "Allowed target unit types for kill, hit and damage-based action recharging.",
        "syntax": "<RechargeIncludeTypes><UnitType>NavalUnit</UnitType></RechargeIncludeTypes>",
        "parameters": []
      },
      {
        "name": "RechargeExcludeTypes",
        "description": "Forbidden target unit types for kill, hit and damage-based action recharging.",
        "syntax": "<RechargeExcludeTypes><UnitType>NavalUnit</UnitType></RechargeExcludeTypes>",
        "parameters": []
      },
      {
        "name": "CorpseDecayDelay",
        "description": "Delay time in seconds before decay ‘sinking’ happens after unit death."
      },
      {
        "name": "Lifespan",
        "description": "ProtoUnit lifespan."
      },
      {
        "name": "Decay",
        "description": "Defines the delay time and the duration of decaying fadeout. Takes two parameters, decay and duration.",
        "syntax": "<Decay delay='0.0000' duration='2.0000'></Decay>",
        "parameters": []
      },
      {
        "name": "CreationFadeTime",
        "description": "Time in seconds in which unit will fade-in upon being created or placed. Takes one parameter, initAlpha, which defines the initial alpha level for the unit once it’s spawned.",
        "syntax": "<CreationFadeTime initAlpha='0.0000'>1.0000</CreationFadeTime>",
        "parameters": []
      },
      {
        "name": "PopulationCapAddition",
        "description": "Amount of population capacity to be added to player’s population once protoUnit is fully built."
      },
      {
        "name": "DeadReplacementLifespan",
        "description": "Deprecated"
      },
      {
        "name": "DeadReplacement",
        "description": "ProtoUnit to be placed upon destruction."
      },
      {
        "name": "BuildReplacement",
        "description": "ProtoUnit that replaces originally placed unit once it’s fully built."
      },
      {
        "name": "Spawn",
        "description": "Defines a protoUnit to be placed according to a set event. Can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Defines the event that will trigger the spawning. Can take one of the following values: dead, killed, birth, build, mutate, hit, hitGround, revertToSocket, hitWater and selfDestruct."
          },
          {
            "name": "count",
            "description": "Sets the number of units to be spawned."
          },
          {
            "name": "lifespan",
            "description": "Sets the lifespan time of the units to be spawned."
          },
          {
            "name": "chance",
            "description": "Sets the chance for the spawning to occur. Should be set to a floating-point value between 0 and 1."
          },
          {
            "name": "delay",
            "description": "Sets the delay, in milliseconds, for the spawning to occur as soon as the set event is detected."
          },
          {
            "name": "skipPlacementCheck",
            "description": "Takes up no value. If present, placement logic will be ignored for spawned units."
          },
          {
            "name": "controlGroup",
            "description": "Takes up no value. If present, spawned units will inherit the same control group as the source unit."
          },
          {
            "name": "waterProtoUnit",
            "description": "Defines the protoUnit to be spawned, in case the source unit is over water."
          }
        ]
      },
      {
        "name": "Replacement",
        "description": "Defines a protoUnit that the unit is to be transformed to as soon as a set event occurs. Can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Defines the event that will trigger unit transformation/mutation. Can take up the same values as for Spawn, except for mutate."
          },
          {
            "name": "lifespan",
            "description": "Sets the lifespan time of the resulting unit."
          }
        ]
      },
      {
        "name": "BuildLimit",
        "description": "ProtoUnit build limit."
      },
      {
        "name": "SharedBuildLimitUnit",
        "description": "ProtoUnit whose build limit value should be used for shared build limit. Requires protoUnit flag UseSharedBuildLimit to be set for proper functionality."
      },
      {
        "name": "SharedBuildLimitUnitTypes",
        "description": "Lists unit types or protoUnits which should be accounted for the shared build limit. Requires protoUnit flag UseSharedBuildLimit to be set for proper functionality. UnitType entries can take a weight parameter, that determines how much units belonging to that given unitType contribute to the total build limit calculation.",
        "syntax": "<SharedBuildLimitUnitTypes>\n<UnitType>Kuafu</UnitType>\n<UnitType weight='0.3334'>VillagerChinese</UnitType>\n</SharedBuildLimitUnitTypes>",
        "parameters": []
      },
      {
        "name": "DynamicBuildLimitUnitTypes",
        "description": "Lists unit types or protoUnits whose counts will affect the build limit of the unit in a multiplicative manner.",
        "syntax": "<DynamicBuildLimitUnitTypes>\n<UnitType>HesperidesTree</UnitType>\n<UnitType>SummoningTree</UnitType>\n</DynamicBuildLimitUnitTypes>",
        "parameters": []
      },
      {
        "name": "MaxContained",
        "description": "Maximum number of garrisoned units allowed."
      },
      {
        "name": "ProjectileProtoUnit",
        "description": "Projectile unit to be used for ranged attack actions that do not explicitly define a projectile unit. Superseded by ProtoAction-specific projectile protoUnit attribute"
      },
      {
        "name": "ResourceDecay",
        "description": "Resource decay rate for dead herdables and huntables."
      },
      {
        "name": "SocketUnitType",
        "description": "Unit type where the protoUnit can be placed over, serving as a socket for the unit."
      },
      {
        "name": "NonSocketPlaceProtoID",
        "description": "ProtoUnit to be placed down when attempting to construct this unit outside its intended socket."
      },
      {
        "name": "SocketOffsetX",
        "description": "Offset for socket placement in the X axis."
      },
      {
        "name": "SocketOffsetZ",
        "description": "Offset for socket placement in the Z axis."
      },
      {
        "name": "AutoAttackRange",
        "description": "ProtoUnit auto-attack range."
      },
      {
        "name": "GodPowerBlockRadius",
        "description": "Radius in which unit will cause God Power casting to be blocked."
      },
      {
        "name": "StealthDetectionRadius",
        "description": "Radius in which units under stealth within the vicinity of this unit will be revealed. Does not reveal units put under stealth through the Vanish God Power."
      },
      {
        "name": "ProjectileSpinPeriod",
        "description": "Spinning period for projectile protoUnits. Causes projectiles to spin at the set period when shot."
      },
      {
        "name": "HeightBob",
        "description": "Causes the altitude of flying units to slightly oscillate by periods of time while idle. Takes two parameters, period and magnitude.",
        "syntax": "<HeightBob period='6.0000' magnitude='2.0000' />",
        "parameters": []
      },
      {
        "name": "PartisanType",
        "description": "Partisan protounit to be spawned upon building’s destruction, if partisans are enabled in the current civilization."
      },
      {
        "name": "PartisanCount",
        "description": "Amount of partisan units to be spawned, if PartisanType is properly set and partisans are enabled in the current civilization."
      },
      {
        "name": "BallisticSplashProto",
        "description": "ProtoUnit for SFX to be rendered upon projectile colliding on water. Unused and superseded by impact effect data."
      },
      {
        "name": "BallisticImpactProto",
        "description": "ProtoUnit for SFX to be rendered upon projectile colliding against structures. Unused and superseded by impact effect data"
      },
      {
        "name": "ImpactType",
        "description": "ProtoUnit impact type. Used for impact effects rendering."
      },
      {
        "name": "ScreenshakeOnDestruction",
        "description": "Strength value to be applied for camera shaking upon full destruction."
      },
      {
        "name": "DependentUnit",
        "description": "Defines a protoUnit to be spawned upon unit creation/placement, that will be removed as soon as the source unit is destroyed. Can take up the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "x",
            "description": "Unit placement offset on the x axis."
          },
          {
            "name": "y",
            "description": "Unit placement offset on the y axis."
          },
          {
            "name": "z",
            "description": "Unit placement offset on the z axis."
          }
        ]
      },
      {
        "name": "PhysicsInfo",
        "description": "Path to protoUnit physics info files, relative to Data\\physics."
      },
      {
        "name": "SelectionPriority",
        "description": "ProtoUnit selection priority value."
      },
      {
        "name": "Culture",
        "description": "Culture to be used for object filtering in the Scenario Editor."
      },
      {
        "name": "Armor",
        "description": "ProtoUnit Armor. Takes two parameters, type and value.",
        "syntax": "<Armor type='Pierce' value='0.7500'></Armor>",
        "parameters": []
      },
      {
        "name": "DirectionalArmor",
        "description": "Multiplier to be applied to damage dealt against the unit within a provided angle in radians. Takes two parameters, angle and value.",
        "syntax": "<DirectionalArmor angle='1.0472' value='0.5000' />",
        "parameters": []
      },
      {
        "name": "ReceiveDamageMultiplier",
        "description": "Multipler to be applied to all damage dealt against this unit."
      },
      {
        "name": "Train",
        "description": "Adds a unit to the protoUnit’s command panel. Takes two parameters: row and column.",
        "syntax": "<Train row='0' column='3'>Hoplite</Train>",
        "parameters": []
      },
      {
        "name": "Tech",
        "description": "Adds a tech to the protoUnit’s command panel. Takes up the same parameters as Train.",
        "syntax": "<Tech row='0' column='1'>HeavyArchers</Tech>",
        "parameters": []
      },
      {
        "name": "Command",
        "description": "Adds a ProtoUnitCommand to the protoUnit’s command panel. Takes two parameters: page, column.",
        "syntax": "<Command row='3' column='2'>SeekShelter</Command>",
        "parameters": []
      },
      {
        "name": "OptionalCommand",
        "description": "Adds a ProtoUnitCommand to the protoUnit’s command panel, which will only be displayed when having a unit within the selection that has that command. Takes two parameters: page, column.",
        "syntax": "<OptionalCommand row='2' column='4'> MilitaryCampToTower</OptionalCommand>",
        "parameters": []
      },
      {
        "name": "Build",
        "description": "Adds a unit to the protoUnit’s command panel. Takes two parameters: row andcolumn."
      },
      {
        "name": "Contain",
        "description": "Allows the set unitType to be garrisoned within the unit. Can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "external",
            "description": "If set to 1, contained units will be rendered outside containing building or unit."
          },
          {
            "name": "inDelay",
            "description": "Delay time in seconds for garrisoning units of the given unit type."
          },
          {
            "name": "outDelay",
            "description": "Delay time in seconds for ejecting units of the given unit type. Requires MeteredGarrison protoUnit flag to be set in container for proper functionality."
          }
        ]
      },
      {
        "name": "Tactics",
        "description": "Path to protoUnit tactics file, relative to Data\\tactics."
      },
      {
        "name": "HotkeyContext",
        "description": "Hotkey context to be used for hotkey keybinding. Should be set to a valid hotkey context."
      },
      {
        "name": "AllyHotkeyContext",
        "description": "Hotkey context for hotkey keybinding accessible by allied players. Should be set to a valid hotkey context."
      },
      {
        "name": "HoverTextOverride",
        "description": "Deprecated.",
        "deprecated": true
      },
      {
        "name": "BuildTextOverride",
        "description": "String ID to be used for the notification text once the building is fully built. Uses default hardcoded formatted string, if not set. Only functional if TrainBuildFeedback config is set."
      },
      {
        "name": "ContainedHitPointBonus",
        "description": "Defines how much each garrisoned unit contributes to its hit points. Applied linearly."
      },
      {
        "name": "PlacementObstructionRadiusX",
        "description": "Obstruction radius to be used while placing foundations in the X axis. Used by buildings with crops, whose placement is restricted by ObstructionAtLeastFromType conditions."
      },
      {
        "name": "PlacementObstructionRadiusZ",
        "description": "Obstruction radius to be used while placing foundations in the Z axis. Used by buildings with crops, whose placement is restricted by ObstructionAtLeastFromType conditions."
      },
      {
        "name": "FarmingRadiusX",
        "description": "Radius of the walkable area of a farm building in the X axis. Requires the UseFarmingAnims protoUnit flag to be set for proper functionality."
      },
      {
        "name": "FarmingRadiusZ",
        "description": "Radius of the walkable area of a farm building in the Z axis. Requires the UseFarmingAnims protoUnit flag to be set for proper functionality."
      },
      {
        "name": "FarmingNumStops",
        "description": "Number of different positions an unit can move to after finishing a gathering cycle in a farming building, including its current position. Can’t be set to a value lower than two. Requires the UseFarmingAnims protoUnit flag to be set for proper functionality. If it’s not set, it will default to the hardcoded value of 8."
      },
      {
        "name": "FarmingObstructionRadiusX",
        "description": "Obstruction radius in the X axis to be used by farming code. Doesn’t affect farm placement or building."
      },
      {
        "name": "FarmingObstructionRadiusZ",
        "description": "Obstruction radius in the Z axis to be used by farming code. Doesn’t affect farm placement or building."
      },
      {
        "name": "DodgeChance",
        "description": "Chance of dodging an attack. Defaults to a hardcoded value if not set. Requires protoUnit flag CanDodgeAttacks to be set for proper functionality."
      },
      {
        "name": "DodgeMessageID",
        "description": "String ID of the floating text message to be used when successfully dodging an attack. Defaults to a hardcoded value if not set. Requires protoUnit flag CanDodgeAttacks to be set for proper functionality. Not functional under AoM: Retold."
      },
      {
        "name": "DodgeSoundSet",
        "description": "Soundset to be played when successfully dodging an attack. Defaults to a hardcoded value if not set. Requires protoUnit flag CanDodgeAttacks to be set for proper functionality."
      },
      {
        "name": "ConversionResistance",
        "description": "Multiplies the conversion time for this unit by the given value."
      },
      {
        "name": "DisplayedRange",
        "description": "Overrides the displayed range value by the given value. Requires protoUnit flag DisplayRange to be set for proper functionality."
      },
      {
        "name": "GatherRateMultiplier",
        "description": "Rate by which the gather rate of an unit gathering from an instance of this protoUnit will be multiplied."
      },
      {
        "name": "NotContain",
        "description": "Forbids the set unitType from being garrisoned within the unit."
      },
      {
        "name": "DeadTransform",
        "description": "ProtoUnit to which the current unit will be transformed to upon reaching zero hitpoints."
      },
      {
        "name": "AIStanceBaseDistance",
        "description": "Base distance to be used for unit auto-attack reaction when its AI Stance is set to Defensive. Set to 30, by default."
      },
      {
        "name": "ContainedRegenRate",
        "description": "Percentage-based regeneration rate for garrisoned units within the protoUnit. Only applies for buildings; overrides DefaultContainedRegenRate in base civilization data."
      },
      {
        "name": "FreeBuildPoints",
        "description": "Deprecated.",
        "deprecated": true
      },
      {
        "name": "SocketBuildProtoUnit",
        "description": "ProtoUnit to be built as a socketed building over the current unit when a socketBuild command is applied."
      },
      {
        "name": "SocketBuildRate",
        "description": "Rate in which a socketBuild command will build the building referred through the SocketBuildProtoUnit attribute."
      },
      {
        "name": "DeploymentCommand",
        "description": "ProtoUnit command used for deployment of units currently garrisoned and that effectively replaces the default Ungarrisson command. Requires DeploymentUngarrison protoUnit flag to be set for proper functionality."
      },
      {
        "name": "VeterancyRanks",
        "description": "Defines veterancy rank data for this protoUnit. Each rank is defined through a Rank child node, which holds the core data for veterancy progression for that rank. Each Rank child node can take up the following childen nodes:",
        "syntax": "<VeterancyRanks>\n<Rank>\n<TotalDamage>50</TotalDamage>\n</Rank>\n<Rank>\n<TotalDamage>150</TotalDamage>\n</Rank>\n<Rank>\n<TotalDamage>300</TotalDamage>\n</Rank>\n</VeterancyRanks>",
        "parameters": [
          {
            "name": "NumKills",
            "description": "Number of kills required for progressing to the provided rank."
          },
          {
            "name": "NumAttacks",
            "description": "Number of attacks required for progressing to the provided rank."
          },
          {
            "name": "TotalDamage",
            "description": "Total damage required for progressing to the provided rank."
          },
          {
            "name": "StringID",
            "description": "Displayed string ID for the provided rank. Currently not used by UI."
          },
          {
            "name": "Icon",
            "description": "Icon path for the provided rank. Currently not used by UI."
          }
        ]
      },
      {
        "name": "VeterancyBonus",
        "description": "Defines bonuses to be applied to the unit upon reaching specific veterancy ranks. Bonuses for each rank are defined through VeterancyModify children notes, which take a modifyType attribute that should be set to a valid modify type. Requires ExperienceUnit protoUnit flag to be set for proper functionality. Valid and restricted targets for Veterancy progression can be defined through IncludeTypes and ExcludeTypes, respectively.",
        "syntax": "<VeterancyBonus>\n<Rank id='0'>\n<VeterancyModify modifyType='MaxHP'>1.15</VeterancyModify>\n<VeterancyModify modifyType='ROF'>0.85</VeterancyModify>\n</Rank>\n<Rank id='1'>\n<VeterancyModify modifyType='MaxHP'>1.30</VeterancyModify>\n<VeterancyModify modifyType='ROF'>0.70</VeterancyModify>\n</Rank>\n<Rank id='2'>\n<VeterancyModify modifyType='MaxHP'>1.45</VeterancyModify>\n<VeterancyModify modifyType='ROF'>0.55</VeterancyModify>\n</Rank>\n<IncludeTypes>\n<UnitType>Unit</UnitType>\n</IncludeTypes>\n<ExcludeTypes>\n<UnitType>AbstractVillager</UnitType>\n</ExcludeTypes>\n</VeterancyBonus>",
        "parameters": []
      },
      {
        "name": "OnDamageModifiers",
        "description": "Defines progressive modifiers to be applied as the unit gets damaged. The amount to be added for a modifier for each percent of the total unit’s HP lost is defined through an OnDamageModify child node, which, beyond that, can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "modifyType",
            "description": "Modify type for the modifier to be applied."
          },
          {
            "name": "damageType",
            "description": "Damage type for ArmorSpecific and DamageSpecific modify types.",
            "syntax": "<OnDamageModifiers>\n<OnDamageModify modifyType='Damage'>0.0025</OnDamageModify>\n</OnDamageModifiers>",
            "parameters": []
          }
        ]
      },
      {
        "name": "ModifyTiers",
        "description": "Defines the total rate values to be used for progressing to a given tier through children Tier nodes. Intended to be used by the modification tiers system for self- modification protoActions.",
        "syntax": "<ModifyTiers>\n<Tier>5</Tier>\n<Tier>10</Tier>\n</ModifyTiers>",
        "parameters": []
      },
      {
        "name": "TransformCommand",
        "description": "Protounit command to be researched when a transform command is issued over the unit."
      },
      {
        "name": "SelfDestructProtoAction",
        "description": "Attack protoAction to be triggered upon death."
      },
      {
        "name": "BirthProtoAction",
        "description": "Attack protoAction to be triggered upon completion of birth anim."
      },
      {
        "name": "StackProtoAction",
        "description": "ProtoAction to be used for stackable effect management (e.g. Taotie unit devouring mechanic)."
      }
    ],
    "Flags": [
      {
        "name": "NoUnitAI",
        "description": "Self-explanatory."
      },
      {
        "name": "NotPlayerPlaceable",
        "description": "Causes the unit to not be directly placeable through the Editor"
      },
      {
        "name": "StartEnabled",
        "description": "Unit starts enabled, without the necessity of being explicitly enabled by any technology."
      },
      {
        "name": "NotAlive",
        "description": "Self-explanatory."
      },
      {
        "name": "TieToWaterSurface",
        "description": "Self-explanatory."
      },
      {
        "name": "FlyingUnit",
        "description": "Self-explanatory."
      },
      {
        "name": "NoTieToGround",
        "description": "Self-explanatory."
      },
      {
        "name": "Collideable",
        "description": "Self-explanatory. Set by default."
      },
      {
        "name": "NonCollideable",
        "description": "Self-explanatory."
      },
      {
        "name": "Immoveable",
        "description": "Self-explanatory."
      },
      {
        "name": "NoHPBar",
        "description": "Self-explanatory."
      },
      {
        "name": "DieAtZeroHitpoints",
        "description": "Self-explanatory. Set by default."
      },
      {
        "name": "DoNotDieAtZeroHitpoints",
        "description": "Self-explanatory."
      },
      {
        "name": "DieAtZeroResources",
        "description": "Self-explanatory."
      },
      {
        "name": "DoNotDieAtZeroResources",
        "description": "Self-explanatory."
      },
      {
        "name": "ValidateResourceInventory",
        "description": "Forces the game to verify current unit resource inventory against the carry capacity for each resource, and adjust it accordingly. Set by default."
      },
      {
        "name": "DoNotValidateResourceInventory",
        "description": "Causes unit resource inventory to not be checked against the carry capacity for each resource."
      },
      {
        "name": "NoBloodOnDeath",
        "description": "Self-explanatory."
      },
      {
        "name": "BloodOnDeath",
        "description": "Self-explanatory. Set by default."
      },
      {
        "name": "DoesNotHaveGatherPoint",
        "description": "Self-explanatory. Set by default."
      },
      {
        "name": "HasGatherPoint",
        "description": "Self-explanatory."
      },
      {
        "name": "PlayerPlaceable",
        "description": "Set by default."
      },
      {
        "name": "NonSolid",
        "description": "Causes unit or building obstruction to not block units from passing through."
      },
      {
        "name": "Selectable",
        "description": "Self-explanatory. Set by default."
      },
      {
        "name": "NotSelectable",
        "description": "Self-explanatory."
      },
      {
        "name": "FlattenGround",
        "description": "Self-explanatory."
      },
      {
        "name": "ObscuresUnits",
        "description": "Self-explanatory."
      },
      {
        "name": "ObscuredByUnits",
        "description": "Self-explanatory."
      },
      {
        "name": "NotObscuredByUnitsAsFoundation",
        "description": "Self-explanatory."
      },
      {
        "name": "DoNotShowOnMinimap",
        "description": "Self-explanatory."
      },
      {
        "name": "NonAutoFormedUnit",
        "description": "Causes units to not adopt formations automatically."
      },
      {
        "name": "DontRotateObstruction",
        "description": "Causes actual obstruction to be rotated accordingly to be building orientation."
      },
      {
        "name": "CreateUnitGroupAutomatically",
        "description": "Causes unit to automatically be added to a Squad once it’s instantiated."
      },
      {
        "name": "VisibleUnderFog",
        "description": "Self-explanatory."
      },
      {
        "name": "VisibleUnderFogIfNature",
        "description": "Self-explanatory."
      },
      {
        "name": "AlphaFadeLifespan",
        "description": "If Lifespan is set for the protoUnit, causes the fade-out to begin as the lifespan time starts to be counted."
      },
      {
        "name": "Wanders",
        "description": "Causes units to wander. Used for herdables and huntables. Seems to only affect GAIA-owned units."
      },
      {
        "name": "CollidesWithProjectiles",
        "description": "Self-explanatory."
      },
      {
        "name": "Projectile",
        "description": "Self-explanatory."
      },
      {
        "name": "FadeInOnBuild",
        "description": "Causes buildings to have a fade-in effect after being fully built."
      },
      {
        "name": "NotSearchable",
        "description": "Causes the unit to not be accounted for internal visible unit lookups."
      },
      {
        "name": "UnlimitedSupply",
        "description": "Used for resource storages with unlimited supply of resources."
      },
      {
        "name": "FaceOutwards",
        "description": "Causes unit to be placed facing the lowest terrain point."
      },
      {
        "name": "SnapPlacement",
        "description": "Allows socketed buildings to properly snap into sockets during placement."
      },
      {
        "name": "FadeOutDuringDeathAnimation",
        "description": "Causes fade out to start as the death animation begins."
      },
      {
        "name": "ForceToNature",
        "description": "Self-explanatory."
      },
      {
        "name": "DoNotYawDuringMovement",
        "description": "Intended to cause units to not rotate/turn while moving."
      },
      {
        "name": "GivesLOSToAll",
        "description": "Self-explanatory."
      },
      {
        "name": "Doppled",
        "description": "Causes the unit to leave a doppelganger when under fog."
      },
      {
        "name": "NotDeleteable",
        "description": "Self-explanatory."
      },
      {
        "name": "DestroyProjectile",
        "description": "If set on a projectile protoUnit, causes it to be destroyed after reaching the target."
      },
      {
        "name": "OnlyInEditor",
        "description": "Self-explanatory."
      },
      {
        "name": "CannotAttackDisabledUnits",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "OrientUnitWithGround",
        "description": "Causes unit to orient itself with the ground."
      },
      {
        "name": "AlwaysFullColorAsCursor",
        "description": "Determines whether or not we check obstructions and alter the color of this as a cursor item."
      },
      {
        "name": "ConstrainOrientation",
        "description": "Enables orientation constraints for the code that orients a unit with the ground."
      },
      {
        "name": "InitialGarrisonOnly",
        "description": "If set, unit will only be garrisonable by units trained from it upon setting the gather point to itself."
      },
      {
        "name": "WallBuild",
        "description": "Self-explanatory."
      },
      {
        "name": "ShowGarrisonButton",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "NotCommandable",
        "description": "Causes unit to not be able to take commands."
      },
      {
        "name": "KillOnAnimLoop",
        "description": "Causes unit to be killed on next animation loop."
      },
      {
        "name": "AreaDamageConstant",
        "description": "Causes the area damage inflicted by the unit to not vary with distance from the original attack target position. Unused, but functional."
      },
      {
        "name": "NoIdleActions",
        "description": "Causes internal idle action to not be processed for this unit."
      },
      {
        "name": "NoProjectileDamage",
        "description": "Causes projectile unit to inflict no damage."
      },
      {
        "name": "PlaceAnywhere",
        "description": "Disables placement checks entirely."
      },
      {
        "name": "ProjectileTerrainOnly",
        "description": "Forbids projectile unit from colliding against units."
      },
      {
        "name": "PlayerOwnsObstruction",
        "description": "Used for Gate functionality."
      },
      {
        "name": "PlaceSocketWhenPlacing",
        "description": "Causes Socket protoUnit to be placed once the building is placed. Requires SocketUnitType to be set to a protoUnit, instead of an UnitType."
      },
      {
        "name": "AlwaysShowAsSocket",
        "description": "Causes socket unit to remain visible after it’s occupied."
      },
      {
        "name": "StartOnAnimationUpdate",
        "description": "Causes unit to be initialized with persistent updates (i.e. for unit AI or persistent actions) disabled, except for animation updating."
      },
      {
        "name": "StartOnNoUpdate",
        "description": "Causes unit to be initialized with persistent updates (i.e. for unit AI or persistent actions) disabled."
      },
      {
        "name": "DeadReplacementWhenDestroyed",
        "description": "When set, causes the dead replacement to be only placed when the unit is actually destroyed, and not right after death/killing is triggered."
      },
      {
        "name": "AnnounceConversion",
        "description": "Causes a notification to be sent to all players when building is upgraded/transformed."
      },
      {
        "name": "SelectWithObstruction",
        "description": "If set, selection will also account for unit obstruction."
      },
      {
        "name": "ConvertOnStartBuild",
        "description": "Causes building to be converted to player as soon as upgrading/transforming process starts."
      },
      {
        "name": "PlaceAsFoundation",
        "description": "Forces building to be not fully built on scenario load or when placed in the editor."
      },
      {
        "name": "ConvertToGaiaAtZeroHitpoints",
        "description": "Returns object to Gaia control at zero hitpoints."
      },
      {
        "name": "MakeUnbuiltAtZeroHitpoints",
        "description": "Resets all construction progress when the unit hits zero hitpoints."
      },
      {
        "name": "ExcludeFromPlaytest",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "SolidFoundation",
        "description": "Causes foundations to be solid and collideable at placement."
      },
      {
        "name": "HideGarrisonFlag",
        "description": "Causes Garrison Flag to not show up over unit/building if it has garrisoned units."
      },
      {
        "name": "DoppleOnlyWhenDead",
        "description": "If set, unit will only leave a doppelganger under fog when dead. Used for trees."
      },
      {
        "name": "DirectProjectile",
        "description": "If set, launched projectiles fly direct in a straight line to their target."
      },
      {
        "name": "ForceBuildingData",
        "description": "If set, causes internal Building Data, containing attributes like Building Work Rate, to be initialized for the unit, even if it’s not a building."
      },
      {
        "name": "DecalStickToWaterSurface",
        "description": "If set, the decal will be computed using water vertices when over water."
      },
      {
        "name": "AllowAutoGarrison",
        "description": "Allows auto-garrisoning by right-clicking for garrisonable units."
      },
      {
        "name": "OverrideInitialGarrison",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "MeteredGarrison",
        "description": "Causes ungarrisoning/ejection to be done unit per unit, internally."
      },
      {
        "name": "RevealFoundation",
        "description": "When set, causes this building's location to be revealed to all when first worked upon."
      },
      {
        "name": "ColorTransformNonNature",
        "description": "When set, causes the minimap icon to use the player color when unit is converted from gaia"
      },
      {
        "name": "ApplyHandicapTraining",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "NotKBTracked",
        "description": "Causes the unit to not be accounted for by KB lookups."
      },
      {
        "name": "VisibleOwnerOnly",
        "description": "Makes the unit become only visible to owner and allies."
      },
      {
        "name": "HideFromDialogs",
        "description": "Hides unit from listings within unit help dialogues and advanced tech rollovers."
      },
      {
        "name": "HideResourceInventory",
        "description": "Causes inventory to not be displayed on UI upon selection"
      },
      {
        "name": "NotRotateable",
        "description": "Forbids object or building from being rotateable at placement."
      },
      {
        "name": "DestroyUnderBuilding",
        "description": "Causes the object to be deleted once a building foundation is placed over it."
      },
      {
        "name": "NotScalable",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "GodPowerExclusion",
        "description": "Prevents God Powers from being casted under the vicinity of the unit/building, using the default radius for God Power blocking, as set through the GPShieldRadius config, or defaulting to 20, in case it’s not set."
      },
      {
        "name": "Invulnerable",
        "description": "Self-explanatory."
      },
      {
        "name": "DeadReplaceOnlyOnTimeout",
        "description": "Limits dead replacement only to deaths due to lifespan expiring."
      },
      {
        "name": "SingleGatherer",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "InvulnerableIfNature",
        "description": "Self-explanatory."
      },
      {
        "name": "CorpseDecays",
        "description": "Determines if unit is supposed to get corpse decals when the it dies."
      },
      {
        "name": "CantBeSlowed",
        "description": "Forbids unit from being affected by snaring/TargetSpeedBoost."
      },
      {
        "name": "HideHitpointsIfNature",
        "description": "Hides hitpoints from UI when owned by Nature/Gaia."
      },
      {
        "name": "FlareOnFullyBuilt",
        "description": "Causes construction to be flared upon completion."
      },
      {
        "name": "AnnounceFoundationStarted",
        "description": "Causes all players to be notified as soon as construction starts being worked on by villagers."
      },
      {
        "name": "VictoryBuilding",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "PaintTextureWhenPlacing",
        "description": "If set, forces the editor to paint down a suitable texture underneath if required."
      },
      {
        "name": "Burnable",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "MutateDopples",
        "description": "Causes fog of war doppelgangers to be updated, in case base unit got mutated to another unitType."
      },
      {
        "name": "InvalidTownBellLocation",
        "description": "Prevents building from receiving units for garrison from Town Bell activation."
      },
      {
        "name": "UseObstructionOnMinimap",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "UseAlignedObstructionOnMinimap",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "DontMarkExtraFog",
        "description": "Causes unit to not mark additional fog (unveil nearby fogged units)"
      },
      {
        "name": "VisibleUnderFogOnlyAfterSeen",
        "description": "If set, unit will become visible under the fog, if it had seen before by the player."
      },
      {
        "name": "RMCanRotate",
        "description": "Allows unit to be rotated by RM placement."
      },
      {
        "name": "KnockoutDeath",
        "description": "Enables hero death for unit."
      },
      {
        "name": "VariationLocked",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ExperienceUnit",
        "description": "Causes kills of military units performed by this unit to be internally tracked by the unit’s dynamic data. Required for the usage of the Veterancy system on units."
      },
      {
        "name": "FadeOutDecalOnDeath",
        "description": "Causes unit decal to fade out upon death."
      },
      {
        "name": "AnnounceDestruction",
        "description": "Causes a notification to be sent to all players when destroyed."
      },
      {
        "name": "BattleMusicTrigger",
        "description": "If set, triggers battle music when attacked."
      },
      {
        "name": "RotateInPlace",
        "description": "If set, allows units to rotate even if they are immovable"
      },
      {
        "name": "AdjustPositionOnTerrainCollision",
        "description": "If set, this unit will stop moving at the point of impact, and move to the point of intersection."
      },
      {
        "name": "HeroNameSimple",
        "description": "Causes unit to use randomly generated names, out of names defined in game\\data\\strings\\random_names.xml."
      },
      {
        "name": "HeroNamePharaoh",
        "description": "Causes unit to use randomly generated names, out of names defined in game\\data\\strings\\random_names.xml, while adding a roman numeral after its name, after dying and being re-spawned, and adding titles and epithets, if those happen to be defined within the aforementioned file."
      },
      {
        "name": "HideCostFromDetailHelp",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "PreventsWallBuilding",
        "description": "Should be set true for buildings/objects that won't allow a wall nearby. Unused, but functional."
      },
      {
        "name": "CreateUniqueInstance",
        "description": "Causes every instance of this unit to use its own instance of protoUnit data. Not useful for AoM: Retold."
      },
      {
        "name": "TileAlignPlacement",
        "description": "If set, item snaps to tile aligned locations when placing."
      },
      {
        "name": "WorldToolTip",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "TCBuildLimit",
        "description": "Causes unit to use shared TownCenter Build Limit."
      },
      {
        "name": "Blocker",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "LockedSquad",
        "description": "Not applicable for AoM:Retold."
      },
      {
        "name": "SelectOnTrain",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "PlaceAnywhereRules",
        "description": "Forces building to abide by placement rules, even if PlaceAnywhere protoUnit flag is set."
      },
      {
        "name": "ForcePopulationImpactWhenPlaced",
        "description": "Enforces population impact right when building foundation is placed"
      },
      {
        "name": "CanAutoHeal",
        "description": "Specifies units that can auto-heal other units."
      },
      {
        "name": "ExcludeFromMoveAllMilitary",
        "description": "Self-explanatory."
      },
      {
        "name": "DoNotShowAutoGatherRate",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "CanTargetButTakesNoDamage",
        "description": "Self-explanatory."
      },
      {
        "name": "AllowOverPopCap",
        "description": "Allows unit to be spawned from a Maintain action, if there’s at least one free population slot, regardless if player will go over population capacity afterwards."
      },
      {
        "name": "EnterHotkeyContext",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "CivSpecificText",
        "description": "Allows this unit to properly use civilization-specific text in its tooltip, based on civ keys."
      },
      {
        "name": "AlwaysAllowOverPopCap",
        "description": "Forces unit to be spawned from a Maintain action, even if there are no free population slots."
      },
      {
        "name": "NeverCountDeathAsLoss",
        "description": "Causes unit’s death to not be counted as loss for stat tracking."
      },
      {
        "name": "BuildingShowTactics",
        "description": "Causes building tactics defined through tactic data to be displayed in the UI."
      },
      {
        "name": "DisplayRange",
        "description": "Causes unit range to be displayed as a decal upon selection. Rendered obsolete with recently implemented game options, which allow displaying range for all units/buildings."
      },
      {
        "name": "InvulnerableToAreaDamage",
        "description": "If set, this unit cannot receive any kind of damage from area attacks."
      },
      {
        "name": "DoNotDragSelectWithUnits",
        "description": "If set, this unit won't be selected with other UnitClass units when drag-selecting."
      },
      {
        "name": "TownDefenseUnit",
        "description": "Intended to denote short-duration levied units. Obsolete."
      },
      {
        "name": "DontTrainInBatches",
        "description": "Prevents batch training and forces train limit per action to 1."
      },
      {
        "name": "KillIfConverted",
        "description": "If set, unit is automatically killed after being successfully converted/captured."
      },
      {
        "name": "ShowUnitResourceActionRates",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "SettlerBuildLimit",
        "description": "If set, unit will share build limit with all units with the LogicalTypeVillagerBuildLimit unittype set."
      },
      {
        "name": "UseSharedBuildLimit",
        "description": "If set, unit will use the generic shared build limit."
      },
      {
        "name": "InflictsNoDamage",
        "description": "If set, unit should not inflict any damage when attacking, regardless of protoAction attributes. Attacks performed by this unit will still raise warnings for enemies."
      },
      {
        "name": "CanDodgeAttacks",
        "description": "Enables dodging behaviour for non-Japanese Monk units."
      },
      {
        "name": "NextResearchIsFree",
        "description": "Forces the immediate next research to be added to the queue in a building to be free."
      },
      {
        "name": "UnitTransformFree",
        "description": "If set, transforming to this unit won't cost any resources."
      },
      {
        "name": "UseFarmingAnims",
        "description": "If set, units will move around the gather site while gathering from it, akin to Mills and Farms."
      },
      {
        "name": "BuiltWithSeedingAnim",
        "description": "If set, forces units to use farming animations when constructing the building."
      },
      {
        "name": "RangeDisplayedAsSquare",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AllowSocketPlacement",
        "description": "Indicates units that behave like sockets, while not belonging to the AbstractSocket type."
      },
      {
        "name": "OptionalSocketPlacement",
        "description": "If set, a socket-able building will still be buildable outside a socket."
      },
      {
        "name": "AllowPlacementOnIce",
        "description": "If set, allows a building to be placed over Ice terrain."
      },
      {
        "name": "GatherableWhenSocketed",
        "description": "Intended for buildings which become gatherable when placed over a socket."
      },
      {
        "name": "DoNotQueue",
        "description": "If set, unit won't obey building queue when trained."
      },
      {
        "name": "MagnetDoesNotLockUnits",
        "description": "If set, magnet building won't make herdables/huntables unattackable."
      },
      {
        "name": "UseTacticArmorOverride",
        "description": "If set, unit will check for armor overrides in tactic data."
      },
      {
        "name": "ResourceReturnRateTotalCost",
        "description": "If set, return resource rate will be calcualated over the total cost, instead of per resource."
      },
      {
        "name": "DoApplyResourceReturnIfDeleted",
        "description": "If set, resource return will be applied even if the unit was deleted by the player."
      },
      {
        "name": "GatherableByAllies",
        "description": "If set, allows non-standard resource buildings to be gathered by allies."
      },
      {
        "name": "ShowAutoGatherAbsoluteInfo",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "DoTacticToSameUnitType",
        "description": "If set, changing tactic for this unit will cause the change to be propagated to all instances of the same unit, akin to Japanese Shrine behaviour."
      },
      {
        "name": "CannotSnare",
        "description": "If set, unit won’t be able to cause enemy units to become slower temporarily (i.e. ‘snaring’ them) through attack actions with the TargetSpeedBoost protoAction flag set."
      },
      {
        "name": "DoNotUseBaseSpeedRunAnim",
        "description": "If set, the base protoUnit speed will not be used as a reference for switching to running animation and calculating animation speed for movement."
      },
      {
        "name": "DeadTransformBuildLimit",
        "description": "If set, when a unit transform is triggered upon unit death, through the DeadTransform protoUnit attribute, build limit will be checked for the target unit."
      },
      {
        "name": "ForceGatherSiteResource",
        "description": "If set, the game will always use the gather site inventory resource ID for gathering, set through ModifyGather unit actions, without checking the protoUnit main resource or the unit inventory itself."
      },
      {
        "name": "UseStaticFarmingAnims",
        "description": "If set, units will gather from this gather site at predefined spots, defined as bones within the building model."
      },
      {
        "name": "GatherGarrisonToggle",
        "description": "If set, allows building to toggle between gathering and garrisonning mode."
      },
      {
        "name": "HerdablesIgnoreGatherPoint",
        "description": "If set, herdables created/spawned from the unit will ignore gather point data."
      },
      {
        "name": "FreeRepair",
        "description": "If set, repairing this unit costs no resources."
      },
      {
        "name": "CountHerdableAsGatherer",
        "description": "If set, herdables gathering at this unit will be count as gatherers by the game KB."
      },
      {
        "name": "GatherersContributeToResourceRate",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AllowGatheringWhenFull",
        "description": "If set, full invetory checks will be disabled when gathering from this unit, allowing herdables to gather from this unit, even if their current resource inventory is full."
      },
      {
        "name": "HideHealAttachment",
        "description": "If set, heal indicator attachment won’t be displayed whenever a healing action or passive healing bonus is performed over the unit."
      },
      {
        "name": "ChargeMoveAnim",
        "description": "If set, unit will be allowed to use custom animations when moving to perform a charged action."
      },
      {
        "name": "SocketFreeBuilding",
        "description": "If set, issuing a valid SocketBuild command over this unit won't deduct building cost from the player's stockpile."
      },
      {
        "name": "CannotAttackIfNature",
        "description": "If set, unit won't be able to attack when belonging to GAIA."
      },
      {
        "name": "FakeConversion",
        "description": "If set, placing or converting the unit to a player won’t change actual ownership of the unit, but will still set the given player as the owner for resource production through AutoGather protoActions."
      },
      {
        "name": "UseAltRepairCursor",
        "description": "If set, Ankh cursor will be used for repairing/building actions."
      },
      {
        "name": "ForceUpdateVisualWhenCnverted",
        "description": "If set, full unit visual update will be enforced upon conversion."
      },
      {
        "name": "MinimapDisplayOnTop",
        "description": "If set, this unit's minimap icon will always be forced to be displayed on top of all other units within its vicinity."
      },
      {
        "name": "NotRepairable",
        "description": "Prevents this building from being repaired when set."
      },
      {
        "name": "KillSocketWhenDestroyed",
        "description": "If set, unit socket will be removed upon destruction."
      },
      {
        "name": "TeamBuildLimit",
        "description": "If set, build limit logic will account for unit count throughout all team players."
      },
      {
        "name": "IgnoreDefaultEjectTimeout",
        "description": "If set, unit ejection action won't check, internally, for the default unitAI eject delay, if MeteredGarrison protoUnit flag is set."
      },
      {
        "name": "DoNotQueueEjectActions",
        "description": "If set, alongside with the MeteredGarrison protoUnit flag, allows multiple units to be ejected at the same time, even if they have ejection delays set."
      },
      {
        "name": "SharedGarrison",
        "description": "If set, garrisoned units will be shared throughout all other instances of the current protoUnit, and of other protoUnits which have this flag set."
      },
      {
        "name": "DisplayMinimumRange",
        "description": "If set, range decal will also display the minimum attack range of the unit."
      },
      {
        "name": "DoNotAllowAllowAlliedGarrison",
        "description": "If set, allies won’t be able to garrison within this unit."
      },
      {
        "name": "ForceNormalDeathAnim",
        "description": "If set, building will use the same handling for death animations used by units."
      },
      {
        "name": "DeploymentUngarrison",
        "description": "If set, units won't be able to be ungarrisoned manually, but only through a previously-set deployment ability/command."
      },
      {
        "name": "ForceDisplaySquadModes",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "HideIfSocketedFoundationUntouched",
        "description": "If set, socket will be hidden, if building placed upon it is currently an untouched foundation."
      },
      {
        "name": "PrayableTo",
        "description": "If set, praying animation will be used when gathering from this target and dropsite gathering behavior will be overridden."
      },
      {
        "name": "UpgradeSocket",
        "description": "If set, causes building to ‘upgrade’ the socket it’s placed over (i.e. Settlement construction behavior)"
      },
      {
        "name": "RevertToSocketAtZeroHitpoints",
        "description": "If set, reverts to original socket once destroyed."
      },
      {
        "name": "Relic",
        "description": "Self-explanatory."
      },
      {
        "name": "KillsTargetAfterPickupAction",
        "description": "If set, causes targets picked up by Throw actions to die as soon as Throw action event is detected."
      },
      {
        "name": "PlaySoundOnConversion",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "NoAllyRepair",
        "description": "If set, prevents allies from being able to repair this unit."
      },
      {
        "name": "DestroyWhenCompleted",
        "description": "If set, causes building to be destroyed upon being fully constructed."
      },
      {
        "name": "CommonCommands",
        "description": "If set, common unit commands (Ungarrison, Stop and Delete) will be displayed on the 4th row"
      },
      {
        "name": "MilitaryCommands",
        "description": "If set, common military commands (Patrol, Attack Move) will be displayed on the 4th row, as well as the common unit commands."
      },
      {
        "name": "DeleteConfirmation",
        "description": "If set, deletion confirmation dialog will be displayed whenever attempting to delete this unit, regardless of unit type or number of units selected."
      },
      {
        "name": "AutoTrainable",
        "description": "If set, unit will be auto-queueable, even when the ‘Enable Military Auto- Queue’ setting is not enabled."
      },
      {
        "name": "ExcludeFromIdleQuery",
        "description": "If set, unit will be ignored by all queries for idle units performed by hotkeys or in-game UI."
      },
      {
        "name": "HideStances",
        "description": "If set, unit stances will be hidden from in-game UI."
      },
      {
        "name": "RecoverableDeathHeal",
        "description": "If set, unit will be able to recover from death by being healed."
      },
      {
        "name": "RecoverableDeathProximity",
        "description": "If set, unit will be able to recover from death by friendly proximity."
      },
      {
        "name": "NotAttackableByNature",
        "description": "If set, unit will not be attackable by Nature/Gaia-owned units."
      },
      {
        "name": "NoLockedAnimationOnDeath",
        "description": "If set, unit will not lock animations on death to allow any TMCompositeModel to play out events on the model side."
      },
      {
        "name": "NotEjectable",
        "description": "If set, unit will be forbidden from ejecting any garrisoned units by itself."
      },
      {
        "name": "HasContinuousParticles",
        "description": "If true, unit's particle attachments' transforms must be updated whenever the unit moves, otherwise the particles will spawn incorrectly when the unit reappears on screen."
      },
      {
        "name": "HideGarrisonCapacity",
        "description": "If set, protoUnit garrison capacity will be hidden from in-game UI."
      },
      {
        "name": "OrientUnitWithGroundRoll",
        "description": "If set, causes unit to orient itself with ground taking only the roll angle into account, with no changes to pitch angle."
      },
      {
        "name": "DisplayRangeOverride",
        "description": "If set, unit range indicator will be displayed when selecting the unit, regardless of game settings. Also causes the range for all nearby units with this flag set to be displayed, both when placing down and selecting the unit."
      },
      {
        "name": "AutoCommandStartDisabled",
        "description": "If set, abilities with the ActionCommand flag will start with auto-casting disabled."
      },
      {
        "name": "AutoScout",
        "description": "If set, causes Auto Scout to be displayed as a command within in-game UI."
      },
      {
        "name": "DependentAttack",
        "description": "If set, causes dependent units to attack together with parent unit when issuing an attack command."
      },
      {
        "name": "PreQueueNotAllowed",
        "description": "If set, unit won’t be prequeueable."
      },
      {
        "name": "Pickable",
        "description": "If set, will allow unit to be pickable by Pickup actions, without enforcing all of the behavior of Relics."
      },
      {
        "name": "ShowUntouchedFoundation",
        "description": "If set, building foundation will be visible to all players, even while on untouched (i.e. 0% completion) state."
      },
      {
        "name": "SelfRespawn",
        "description": "If set, causes unit to re-spawn"
      },
      {
        "name": "NotDeleteableFoundation",
        "description": "When set, prevents unit from being deleteable while on foundation state."
      },
      {
        "name": "RangeIndicatorForAbilityCasting",
        "description": "When set, units with an ability will show a range indicator while being in manual ability casting mode."
      },
      {
        "name": "NotPushable",
        "description": "When set, prevents unit from being ‘pushable’ by pathing logic."
      },
      {
        "name": "PushPlacement",
        "description": "When set, unit will push units within its vicinity upon placement."
      },
      {
        "name": "HasDefaultAttack",
        "description": "When set, activates lookup for the default attack (i.e. for an attack protoAction with the DefaultAttack flag set), when displaying any attacks on the in-gameUI."
      },
      {
        "name": "SkipFlyingDeathAnim",
        "description": "If set, special logic for flying unit death will be ignored, and death animation will be played normally."
      },
      {
        "name": "DisplayOnMinimapIfContained",
        "description": "If set, minimap icon for this unit will be displayed even when contained/garrisoned."
      },
      {
        "name": "NotDeathTracked",
        "description": "If set, unit death won’t be tracked by game KB."
      },
      {
        "name": "ContainedLOS",
        "description": "If set, unit will still have active LOS even while contained/garrisoned."
      },
      {
        "name": "ForceSecondPage",
        "description": "If set, second page toggle will be displayed on game UI, even if no unit training or building construction is assigned to the unit."
      },
      {
        "name": "ForceEmpowerable",
        "description": "If set, forces a fully-built building to be empowerable, even if it doesn't have any trainable units or researches."
      },
      {
        "name": "KeepGarrisonTimeshift",
        "description": "If set, garrisoned units will be kept when performing time-shifting."
      },
      {
        "name": "GroupSelection",
        "description": "If set, unit will be grouped on the selection panel with other protoUnits it shares selection with."
      },
      {
        "name": "UnitTransformBuildLimit",
        "description": "If set, transformation triggered by protoUnitCommands will take in account build limit for this unit."
      },
      {
        "name": "NotManuallyPlaceable",
        "description": "When set, unit won’t be placeable through in-game build commands."
      },
      {
        "name": "ConvertToTOB",
        "description": "If set, unit will be replaced by a terrain object at game simulation start."
      },
      {
        "name": "MilitaryUIDefault",
        "description": "If set, military commands page will be displayed by default when using economic/military page toggling."
      },
      {
        "name": "DynamicUpdate",
        "description": "If set, the unit tries to return to no update mode (preventing it from going through full-update every game frame) when possible and always has an AI."
      },
      {
        "name": "DynamicUpdateAnimate",
        "description": "Requires DynamicUpdateMode to be set. When set, unit will use animate update instead of none update mode with dynamic update logic."
      },
      {
        "name": "UseAltEmpowerCursor",
        "description": "If set, ‘bolt’ cursor will be used for Empower actions, instead of default ankh cursor."
      },
      {
        "name": "BallisticTrackSource",
        "description": "If set, when spawned through projectile hit, source attacking unit will be tracked within internal unit data, which can be used for sending underAttack events from auras."
      },
      {
        "name": "DisplayBuildingProgress",
        "description": "If set, a progress bar will be displayed with construction progress."
      },
      {
        "name": "DisplayUpgradeProgress",
        "description": "If set, a progress bar will be displayed with upgrade progress."
      },
      {
        "name": "SplitQueue",
        "description": "If set, when queued, training progress for this unit will only be blocked by units with this flag set and vice-versa."
      },
      {
        "name": "InvulnerableOnBirth",
        "description": "If set, unit will be invulnerable during Birth sequence/animation."
      },
      {
        "name": "LifespanBirth",
        "description": "If set, lifespan logic will only be handled as soon as Birth sequence/animation is complete or if it has been skipped."
      },
      {
        "name": "DependentKeepAlive",
        "description": "If set, unit, when assigned as a dependent unit to another unit, will be kept alive after the source unit dies."
      },
      {
        "name": "AbilitiesOnBothPages",
        "description": "If set, for units that support economic/military page toggling, castable abilities will be displayed over both pages."
      },
      {
        "name": "ForceSquareSelection",
        "description": "If set, square selection decal will be rendered for this unit, even if it’s not a building."
      },
      {
        "name": "AutoCommandSingleUnit",
        "description": "If set, only one instance of the protoUnit will be allowed to have auto-casting for a core ability set as an ActionCommand enabled at a time."
      },
      {
        "name": "IgnoreForFavoriteUnitCount",
        "description": "If set, current protoUnit won't be accounted for favorite unit calculation for postgame stats."
      },
      {
        "name": "PreventRespawn",
        "description": "If set, NatureRespawn and SelfRespawn flags will be ignored for this proto unit."
      },
      {
        "name": "PassiveAttack",
        "description": "If set, attack actions for this unit will only be active when the unit is in combat."
      },
      {
        "name": "ImmuneDamageBonus",
        "description": "If set, unit won't be affected by the damage bonuses from the damage inflicted by another unit."
      },
      {
        "name": "NoRandomVariation",
        "description": "If set, unit won’t have randomized variation upon placement."
      },
      {
        "name": "NoBallistic",
        "description": "If set, ballistic logic will not be used/applied for this unit when assigned as a protoAction projectile."
      },
      {
        "name": "HitSpawnIgnorePlacement",
        "description": "If set, placement logic will be fully ignored by any Spawn OnHitEffects this unit may have."
      },
      {
        "name": "SpawnWhenHitGround",
        "description": "Allows HitGround and HitWater spawn events to be handled for flying units when hitting land upon death."
      },
      {
        "name": "AllowAbilityWhenKnockedOut",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AmphibiousBirth",
        "description": "Allows unit to have separate birth animations for spawning at land and at water."
      },
      {
        "name": "AlwaysShowAbilities",
        "description": "Unused and deprecated"
      },
      {
        "name": "TradeAddAllyResources",
        "description": "If set, Allies will be granted a percentage of trade income generated by this unit, upon returning to the Market, as defined by the ModifyAmount protoAction attribute within the Trade protoAction. In case unit is set to generate additional resources besides gold, the percentage to be granted to Allies will be defined by ModifyExponent."
      },
      {
        "name": "UseChargeAfterTransform",
        "description": ""
      },
      {
        "name": "GarrisonIgnoreDiplomacy",
        "description": "If set, unit will be able to garrison within any valid garrisonable building, regardless of the diplomatic stance towards the owner."
      },
      {
        "name": "UseAltConvertCursor",
        "description": "If set, generic ‘hand’ cursor will be used for conversion actions."
      },
      {
        "name": "NoAutoDelayedTransform",
        "description": "If set, unit won’t perform automatic delayed transform, if it supports it and is tasked while being on an immoveable state."
      },
      {
        "name": "CastAbilitySelf",
        "description": "When set, allows auto-casting logic to be handled by applicable actions that do not take an enemy target."
      },
      {
        "name": "AutoAbilityStartDisabled",
        "description": "When set, auto-casting state for abilities that use the default charged time/slot will start as disabled."
      },
      {
        "name": "ForceDeletable",
        "description": "When set, unit will be deletable even it it’s not commandable."
      },
      {
        "name": "IgnoreDependentEditor",
        "description": "If set, unit will not spawn dependent units while on Editor."
      },
      {
        "name": "DependentAttach",
        "description": "If set, instantiates an attaching action when assigned as a dependent unit."
      },
      {
        "name": "AuxAutoAbilityStartDisabled",
        "description": "When set, auto-casting state for abilities that use the auxiliary charged time/slot will start as disabled."
      },
      {
        "name": "IgnoreIfCharmed",
        "description": "If set, unit won't be spawned from a source unit that has been generated from Charmed Conversion."
      }
    ]
  },
  "ProtoActions": {
    "Attributes": [
      {
        "name": "Name",
        "description": "ProtoAction internal name. Takes one parameter, StringID, which sets the displayed string ID for that protoAction. String IDs set in this way will be displayed for every instance of this protoAction name, regardless of the protoUnit."
      },
      {
        "name": "Type",
        "description": "Action type for this protoAction."
      },
      {
        "name": "DisplayNameID",
        "description": "String ID for protoAction displayed name. Overrides default name and doesn’t affect other instances of this protoAction."
      },
      {
        "name": "MaxRange",
        "description": "ProtoAction maximum range."
      },
      {
        "name": "MinRange",
        "description": "ProtoAction minimum range."
      },
      {
        "name": "TypedMaxRange",
        "description": "Maximum range specific to a particular unitType.",
        "syntax": "<TypedMaxRange type=\"Huntable\">10</TypedMaxRange>",
        "parameters": []
      },
      {
        "name": "TypedMinRange",
        "description": "Minimum range specific to a particular unitType. Takes the same arguments as TypedMaxRange."
      },
      {
        "name": "ROF",
        "description": "ProtoAction rate of fire. Can take two arguments, type and target, which causes the rate of fire value to dynamically vary according to a particular variable. The behavior of the rate of fire variation for every possible type value is described as follows:",
        "syntax": "",
        "parameters": [
          {
            "name": "HitpointRatio",
            "description": "Rate of fire linearly decreases as the unit’s hitpoint ratio decreases, converging to the target value, as the hitpoint ratio is closer to 0:",
            "syntax": "<ROF type='HitpointRatio' target='1.5'>3.000000</ROF>",
            "parameters": []
          },
          {
            "name": "MinRange",
            "description": "Rate of fire linearly decreases as the unit distance to the target unit decreases, converging to the target value, as the distance approaches the minimum range:",
            "syntax": "<ROF type='MinRange' target='2.0'>3.000000</ROF>",
            "parameters": []
          }
        ]
      },
      {
        "name": "Rate",
        "description": "ProtoAction work rate for a particular unitType. For action types that aren’t work rate- based, work rate values define which unitTypes are valid attack targets (for attacking actions) or unitTypes that are processed by this particular action (for Spawn and Maintain action types). For AutoGather actions, defines which resource types are gathered. For Gather actions, it can also take a resource attributes, to restrict the work rate to gathering a particular resource, for targets which support multiple resources (i.e. Peach Blossom Spring) Rate entries can also be used for inverted auras (LikeBonus with ModifyRateByType flag set) to set the contribution rate to the stat bonus for every unitType that affects the target unit, or for tiered self-modification actions (LikeBonus with ModifyAmountByTier data), sets the contribution of a unit within the protoAction range towards progression to the next tier. Can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "Defines target type for the provided rate entry.",
            "syntax": "<Rate type='AbstractFarm'>0.670000</Rate>",
            "parameters": []
          },
          {
            "name": "resource",
            "description": "Restricts the given rate entry for the gathering of a particular resource for a target that supports multiple resources.",
            "syntax": "<Rate type='ThePeachBlossomSpring' resource='Food'>0.800000</Rate>",
            "parameters": []
          },
          {
            "name": "yield",
            "description": "Defines yield for resource gathering, controlling how long a resource deposit lasts.",
            "syntax": "<Rate type='Tree' yield='1.200000'>0.500000</Rate>",
            "parameters": []
          },
          {
            "name": "overrideResource",
            "description": "Overrides gathered resource from a resource deposit.",
            "syntax": "<Rate type='AbstractFish' overrideResource='Gold'>0.500000</Rate>",
            "parameters": []
          },
          {
            "name": "inventoryRate",
            "description": "Defines the rate in which will be deposited into the unit’s own resource inventory, while performing a gather action towards the player’s stockpile.",
            "syntax": "<Rate type='deHacienda' inventoryRate='1.0'>1.000000</Rate>",
            "parameters": []
          }
        ]
      },
      {
        "name": "MinRate",
        "description": "ProtoAction minWorkRate for a given unitType. For some actions, this is used for defining additional/auxiliary data. Takes one parameter, type, which determines the target unit type for a given entry."
      },
      {
        "name": "ConversionProtoID",
        "description": "For Convert protoActions, determines the resulting protoUnit conversion target is to be transformed to after a successful conversion. Takes one parameter, srcType, which sets the intended source unitType for an entry.",
        "syntax": "<ConversionProtoID srcType='Boar'>BoarOfSet</ConversionProtoID>",
        "parameters": []
      },
      {
        "name": "TypedDuration",
        "description": "For Convert protoActions with CharmedConvert protoAction flag set, defines the lifespan in milliseconds of the generated unit after a successful charmed conversion, as well as the time in which target unit will remain stunned. Takes one parameter, type, which determines the target unitType for an entry.",
        "syntax": "<TypedDuration type='LogicalTypeMythUnitNotTitan'>8000</TypedDuration>",
        "parameters": []
      },
      {
        "name": "Anim",
        "description": "ProtoAction main animation."
      },
      {
        "name": "ReloadAnim",
        "description": "ProtoAction reload animation, for attacking actions."
      },
      {
        "name": "IdleAnim",
        "description": "ProtoAction idling animation."
      },
      {
        "name": "WalkAnim",
        "description": "ProtoAction-specific movement animation."
      },
      {
        "name": "JogAnim",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "RunAnim",
        "description": "ProtoAction-specific running animation."
      },
      {
        "name": "BoredAnim",
        "description": "ProtoAction-specific bored animation."
      },
      {
        "name": "TypedAnim",
        "description": "For Gather protoActions, overrides the animation to be used for gathering from a given target unitType. Takes one parameter, unitType, which defines the target unit type for which the given animation will be used while gathering."
      },
      {
        "name": "SizeClassAnim",
        "description": "For Throw actions, overrides the attack animation to be used according to the target’s SizeClass. Takes one parameter, class, which determines the minimum sizeClass for that animation to be used",
        "syntax": "<SizeClassAnim class='1'>CapsizeSmallShip</SizeClassAnim>",
        "parameters": []
      },
      {
        "name": "AnimationRate",
        "description": "ProtoAction animation rate. Set, by default, to 1.0. For Spawn actions without the SingleUse protoAction flag set, it can be used to set the average spawning delay."
      },
      {
        "name": "Damage",
        "description": "ProtoAction damage. Takes one parameter, type, which sets the damage type for this damage entry."
      },
      {
        "name": "DamageArea",
        "description": "ProtoAction damage area radius."
      },
      {
        "name": "OuterDamageAreaDistance",
        "description": "Distance value for OuterDamageAreaFactor logic handling."
      },
      {
        "name": "OuterDamageAreaFactor",
        "description": "Defines a lower bound as a percentage for all damage done within the distance defined on the OuterDamageAreaDistance from the impact point. For example, if OuterDamageAreaFactor is set to 0.9, all units within the distance defined at OuterDamageAreaDistance will receive at least 90% of the base damage defined within ProtoAction data, before taking armor and damage bonuses into account."
      },
      {
        "name": "DamageCap",
        "description": "Maximum amount of total damage that can be inflicted by an area attack."
      },
      {
        "name": "DamageFlags",
        "description": "Defines which players are affected by area attack through a combination of the following flags: Nature, Self, Ally and Enemy."
      },
      {
        "name": "DamageBonus",
        "description": "Defines a damage bonus for an attack action. Takes one parameter, type, which defines the unitType for this damage bonus entry."
      },
      {
        "name": "Projectile",
        "description": "ProtoAction projectile protoUnit."
      },
      {
        "name": "MaxHeight",
        "description": "Maximum height for projectile."
      },
      {
        "name": "HeightBonusMultiplier",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "NumberBounces",
        "description": "Defines the maximum number of bounces a single projectile can perform. For ChainAttack attack actions, defines the maximum number of targets that can be potentially hit."
      },
      {
        "name": "ImpactEffect",
        "description": "ProtoAction impact effects file, relative to the Art folder."
      },
      {
        "name": "Accuracy",
        "description": "ProtoAction accuracy."
      },
      {
        "name": "DamageFactorCap",
        "description": "Damage multiplier limit for garrison bonus damage."
      },
      {
        "name": "TrackRating",
        "description": "Rate in which a moving target is tracked. The higher the value, the better the accuracy is against moving targets."
      },
      {
        "name": "AccuracyReductionFactor",
        "description": "Reduction factor to be applied for each tile to be travelled by the projectile."
      },
      {
        "name": "SpreadFactor",
        "description": "Spread factor for projectile lading position over both X and Z axes to be applied for each tile of distance between the original starting and ending position for the projectile."
      },
      {
        "name": "MaxSpread",
        "description": "Maximum spread value for projectile lading position over both X and Z axes."
      },
      {
        "name": "UnintentionalDamageMultiplier",
        "description": "Multiplier to be applied when projectile hit"
      },
      {
        "name": "NumberProjectiles",
        "description": "Actual number of projectiles to be spawned/fired through this ProtoAction."
      },
      {
        "name": "DisplayedNumberProjectiles",
        "description": "Displayed number of projectiles in the UI for this protoAction."
      },
      {
        "name": "VolleyMode",
        "description": "If present, any additional projectiles fired by this unit will miss their intended target, except when attacking buildings."
      },
      {
        "name": "Launchpoint",
        "description": "Bone to be used as launchpoint for this protoAction."
      },
      {
        "name": "Timer",
        "description": "For AutoRangedModify protoActions, defines the delay before modifiers start being applied to units within its area of effect. For ReleaseSkyLantern protoActions, defines the lifespan of the released/spawned unit."
      },
      {
        "name": "AreaSortMode",
        "description": "Defines how units in a target area of effect are sorted for a protoAction. Can be set to Directional or Radial."
      },
      {
        "name": "ImpactForceMin",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ImpactForceMax",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ImpactLaunchAngle",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ModifyType",
        "description": "Modify type for action types that perform dynamic unit data modification."
      },
      {
        "name": "ModifyDamageType",
        "description": "Damage type for ArmorSpecific and DamageSpecific modify ypes."
      },
      {
        "name": "ModifyProtoPower",
        "description": "ProtoPower name of the ability to be affected by the AbilityROF modifyType. Does not affect abilities with global cooldown or using charging time."
      },
      {
        "name": "ModifyMultiplier",
        "description": "For AutoRangedModify actions, defines the multiplier to be used for the bonus to be applied by the aura. For LikeBonus actions, defines the multiplier value used in the bonus factor calculation. For inverted aura actions (LikeBonus with ModifyRateByType flag set), this attribute is unused."
      },
      {
        "name": "ModifyExponent",
        "description": "For LikeBonus actions (except for those set as inverted auras), defines the exponent value used in the bonus factor calculation. For inverted aura, this attribute is unused. The calculation of the modifier factor for LikeBonus is done using the following formula, if ModifyExponent is set to a positive value: 𝑓𝑎𝑐𝑡𝑜𝑟 = (𝑚𝑢𝑙𝑡𝑖𝑝𝑙𝑖𝑒𝑟)(𝑛𝑢𝑚𝑈𝑛𝑖𝑡𝑠) + 𝑒𝑥𝑝𝑜𝑛𝑒𝑛𝑡𝑛𝑢𝑚𝑈𝑛𝑖𝑡𝑠 − 1 + 𝑏𝑎𝑠𝑒 Otherwise, 𝑓𝑎𝑐𝑡𝑜𝑟 = (𝑚𝑢𝑙𝑡𝑖𝑝𝑙𝑖𝑒𝑟)(𝑛𝑢𝑚𝑈𝑛𝑖𝑡𝑠) + 𝑛𝑢𝑚𝑈𝑛𝑖𝑡𝑠(−1)(𝑒𝑥𝑝𝑜𝑛𝑒𝑛𝑡) − 1 + 𝑏𝑎𝑠𝑒"
      },
      {
        "name": "ModifyBase",
        "description": "For LikeBonus actions, defines the base value used in the bonus factor calculation. For inverted aura actions, attribute is unused."
      },
      {
        "name": "ModifyAbstractType",
        "description": "Defines unitTypes to be affected by the aura, for AutoRangedModify actions."
      },
      {
        "name": "ModifyUnitType",
        "description": "Defines protoUnits to be affected by the aura, for AutoRangedModify actions."
      },
      {
        "name": "ModifyProtoID",
        "description": "Defines the individual protoUnit to be affected by the aura, for AutoRangedModify actions; or by the Community Plaza/Fire Pit bonus, for DanceBonus actions."
      },
      {
        "name": "ForbidAbstractType",
        "description": "Defines unitTypes that cannot be affected by an AutoRangedModify action."
      },
      {
        "name": "ForbidUnitType",
        "description": "Defines protoUnits that cannot be affected by an AutoRangedModify action."
      },
      {
        "name": "ModifyAmount",
        "description": "Modification value used by modify types which perform changes linearly."
      },
      {
        "name": "ModifyTargetLimit",
        "description": "Maximum number of units that can be affected by an aura, for AutoRangedModify actions, or to be accounted for the total bonus calculation, for default LikeBonus actions."
      },
      {
        "name": "ModifyDecay",
        "description": "For IdleStatBonus protoActions, defines the decay rate for the modify rate for each tile travelled by the unit. For SelfModify protoActions, defines the decay rate for the modify rate for each second passed, after the unit is no longer within the range of its source unit."
      },
      {
        "name": "SlowHealMultiplier",
        "description": "For Heal actions and AutoRangedModify actions set to perform area healing, defines the multiplier to be applied for the healing rate for units that are either moving, that have been attacked, damaged or performed any attack over the last 3 seconds, or that’s performing any action other than building, gathering or healing."
      },
      {
        "name": "ModifyResourceSubType",
        "description": "Target resource subType for ModifyGather protoActions."
      },
      {
        "name": "ModifyDuration",
        "description": "Duration/lifespan time in milliseconds for AutoRangedModify action. For DelayedTransform protoActions, defines how long the transform sequence/animation will take in milliseconds."
      },
      {
        "name": "EmpoweredModifyMultiplier",
        "description": "For AutoRangedModify actions, determines the multiplier to be applied over the resulting modifier if source unit is currently empowered."
      },
      {
        "name": "RestrictEmpowerType",
        "description": "For AutoRangedModify actions, restricts the unitType unit needs to be empowered by in order for EmpoweredModifyMultiplier to be applied."
      },
      {
        "name": "TransformDuration",
        "description": "For DelayedTransform protoActions, determines how long, milliseconds, unit will remain in transformed state before returning to its original state."
      },
      {
        "name": "ModifyAmountByTier",
        "description": "For LikeBonus actions, sets modify amounts values to be used for each modification tier for every Amount child node.",
        "syntax": "<ModifyAmountByTier>\n<Amount>0.5</Amount>\n<Amount>1.0</Amount>\n</ModifyAmountByTier>",
        "parameters": []
      },
      {
        "name": "ModelAttachment",
        "description": "Attachment to be used by aura/AutoRangedModify actions, relative to the Art folder."
      },
      {
        "name": "ModelAttachmentBone",
        "description": "Bone where ModelAttachment is supposed to be attached to. Should be either a valid bone or bonethatdoesntexist."
      },
      {
        "name": "ModelAttachmentTimer",
        "description": "Duration/lifespan for attached model. Only applicable for AutoConvert and BurstHeal actions."
      },
      {
        "name": "InfectionChance",
        "description": "For AutoRangedModify actions, chance of infection effect (i.e. assigning current protoAction to unit, while ensuring it affects units belonging to the target’s owner) to be applied for a unit affected by the current action."
      },
      {
        "name": "InfectionROF",
        "description": "Time interval in milliseconds in which InfectionChance is checked for applying infection effect for a unit affected by the current action."
      },
      {
        "name": "InfectionDuration",
        "description": "Infection effect duration."
      },
      {
        "name": "InfectionRange",
        "description": "Range override when assigning the current ProtoAction through an infection effect."
      },
      {
        "name": "InfectionAttachment",
        "description": "Animfile for attachment to be assigned to infected unit."
      },
      {
        "name": "InfectionAttachmentBone",
        "description": "Bone for attachment to be assigned to infected unit."
      },
      {
        "name": "ScaleByContainedUnitType",
        "description": "Defines separate rates by which every unit type contributes to garrison bonus.",
        "syntax": "<ScaleByVontainedUnitType>\n<Rate type='Military'>0.101</Rate>\n</ScaleByVontainedUnitType>",
        "parameters": []
      },
      {
        "name": "AttachProtoUnit",
        "description": "ProtoUnit to be attached to target upon attack."
      },
      {
        "name": "CastPower",
        "description": "Defines a protoPower to be cast once action is performed. Restricted to non- Broadside charged attack actions."
      },
      {
        "name": "CastPowerTargetType",
        "description": "Defines the target type for the protoPower to be casted. The possible values for this attribute are listed as follows:",
        "syntax": "",
        "parameters": [
          {
            "name": "self",
            "description": "Casts the power over the attacker unit."
          },
          {
            "name": "unit",
            "description": "Casts the power over the target unit"
          },
          {
            "name": "area",
            "description": "Casts the power over the vicinity of the target unit, taking its position as a reference point."
          }
        ]
      },
      {
        "name": "AfterAction",
        "description": "Action type to be performed after the completion of a OverrideAnimation protoAction. Can be set to either to Move or SwitchingEffect."
      },
      {
        "name": "AreaProtoAction",
        "description": "For Maul protoActions, defines the protoAction to hold data for area attack to be performed upon landing."
      },
      {
        "name": "FullCapacityMultiplier",
        "description": "Work rate multiplier to be applied for an AutoGather action when unit is at its full resource capacity."
      },
      {
        "name": "GatheringMultiplier",
        "description": "Work rate multiplier to be applied for an AutoGather action when unit is performing a gathering action."
      },
      {
        "name": "MaintainWorkRateMultiplier",
        "description": "Work rate multiplier to be applied to a Maintain action."
      },
      {
        "name": "ModifyRateCap",
        "description": "Bonus factor limit for inverted aura actions (LikeBonus with ModifyRateByType flag set)."
      },
      {
        "name": "AutoCastDistance",
        "description": "For Rampage protoActions, minimum distance from target in which action will be auto-casted if it’s not under cooldown and AutoCastBySelf protoAction flag is set."
      },
      {
        "name": "EmpowerData",
        "description": "Data to be used for Empower actions targeted to units belonging to the player. For every unitType entry, the following attributes can be set:",
        "syntax": "",
        "parameters": [
          {
            "name": "Active",
            "description": "Defines whether or not a particular EmpowerData entry is active. Set by default."
          },
          {
            "name": "ForbidUnitType",
            "description": "Defines unitTypes that are forbidden from being affected by empowerment."
          },
          {
            "name": "Anim",
            "description": "Animation to be used for empowering."
          },
          {
            "name": "EmpowerArea",
            "description": "Area of effect for empowerment."
          },
          {
            "name": "EmpowerRate",
            "description": "Defines the empowerment rate for a particular modifyType."
          },
          {
            "name": "ModelAttachment",
            "description": "Similar functionality as of ProtoAction attribute."
          },
          {
            "name": "ModelAttachmentBone",
            "description": "Similar functionality as of ProtoAction attribute.",
            "syntax": "<EmpowerData>\n<Building>\n<ForbidUnitType>MinedResource</ForbidUnitType>\n<EmpowerRate modifyType=\"BuildRate\">1.75</EmpowerRate>\n<EmpowerRate modifyType=\"BuildingWorkRate\">1.5</EmpowerRate>\n</Building>\n</EmpowerData>",
            "parameters": []
          }
        ]
      },
      {
        "name": "EnemyEmpowerData",
        "description": "Data to be used for Empower actions targeted to units belonging to an enemy. Accepts the same attributes as EmpowerData."
      },
      {
        "name": "NatureEmpowerData",
        "description": "Data to be used for Empower actions targeted to units belonging to Gaia/Nature. Accepts the same attributes as EmpowerData."
      },
      {
        "name": "DoNotAutoGatherUnlessGatheringTypes",
        "description": "Restricts the activation of a particular AutoGather action to unit gathering from a resource type belonging to any of the listed types.",
        "syntax": "<DoNotAutoGatherUnlessGatheringTypes>\n<UnitType>AbstractFarm</UnitType>\n<UnitType>Tree</UnitType>\n</DoNotAutoGatherUnlessGatheringTypes>",
        "parameters": []
      },
      {
        "name": "MaintainTrainPoints",
        "description": "Unit train points to be used for Maintain action, instead of the default amount of train points set in the protoUnit data."
      },
      {
        "name": "StunDuration",
        "description": "Stun duration for actions that support StunAttack events or for stunning units thrown by knockback attacks."
      },
      {
        "name": "FreeBuildRate",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "DirectionalDamageRefAngle",
        "description": "Reference angle in radians for directional damage."
      },
      {
        "name": "ConeAreaAngle",
        "description": "Reference angle in degrees for directional damage."
      },
      {
        "name": "MaxSizeClass",
        "description": "Maximum size class for throwing/knockback effects. Does not prevent unit from taking damage."
      },
      {
        "name": "ThrowDistanceMin",
        "description": "Minimum distance for throwing/knockback effects/actions. Overrides hardcoded parameters."
      },
      {
        "name": "ThrowDistanceMax",
        "description": "Maximum distance for throwing/knockback effects/actions. Overrides hardcoded parameters."
      },
      {
        "name": "ThrowMaxHeight",
        "description": "Maximum height for throwing/knockback effects/actions. Overrides hardcoded parameters."
      },
      {
        "name": "ThrowVelocity",
        "description": "Speed for throwing/knockback effects/actions. Overrides hardcoded parameters."
      },
      {
        "name": "HitpointsRatioThreshold",
        "description": "For Throw protoAction, specifically, determines maximum hitpoint ratio for valid targets."
      },
      {
        "name": "ThrowNumBounces",
        "description": "Number of bounces for throwing/knockback effects/actions. Overrides hardcoded parameters."
      },
      {
        "name": "OnHitEffect",
        "description": "Defines an effect to be applied over target units (or, in some cases, over friendly units within the immediate vicinity of the attacker or the attacker itself) once damage is dealt. Can take the following parameters",
        "syntax": "",
        "parameters": [
          {
            "name": "type",
            "description": "OnHitEffect type. A brief overview of all supported OnHitEffect types can be seen at the ‘OnHitEffect Types’ section within this document."
          },
          {
            "name": "active",
            "description": "Determines whether this onHitEffect entry is to start as active. When set to ‘0’, this onHitEffect will need to be enabled by a technology. All onHitEffects start as active by default"
          },
          {
            "name": "deadOnly",
            "description": "Set to ‘1’ if this onHitEffect is only supposed to affect targets that have died."
          },
          {
            "name": "duration",
            "description": "OnHitEffect duration in seconds. Not applicable for Lifesteal, Throw, Mutate, MutateGaia, Push, Pull, ProgShading, TreeFlatten and Shading."
          },
          {
            "name": "targetUnitType",
            "description": "Restricts effect to a particular unitType. Multiple effects belonging to the same type can be set within protoAction data, if they are set for different target unitTypes."
          },
          {
            "name": "rate",
            "description": "OnHitEffect rate. Only applicable for Lifesteal, Snare, DamageOverTime, ProgFreezeSpeed, ProgFreezeROF and Root."
          },
          {
            "name": "prob",
            "description": "OnHitEffect activation chance. Expects an integer from 0 to 100."
          },
          {
            "name": "globalProb",
            "description": "OnHitEffect activation chance, shared between all OnHitEffects (as in, using a unified RNG for all effects, rather than a per-effect RNG). Expects an integer from 0 to 100."
          },
          {
            "name": "terrainType",
            "description": "Restricts effect to targets belonging to a particular movement type (or, for Amphibious targets, to the terrain type they are currently in)."
          },
          {
            "name": "radius",
            "description": "OnHitEffect radius. Only applicable for Boost, Push and Pull."
          },
          {
            "name": "freezeDuration",
            "description": "Duration for freeze effect after progressive freeze effects reach their cap. Only applicable for ProgFreezeSpeed and ProgFreezeROF."
          },
          {
            "name": "proto",
            "description": "OnHitEffect protoUnit. Only applicable for Reincarnation, Mutate, MutateGaia, Attach, Spawn and Root."
          },
          {
            "name": "freezeType",
            "description": "OnHitEffect freeze effect type. Only applicable for Freeze. Valid values are default (freeze type used by Frost Giant attack), stone (petrification with instant death behavior for Legacy AoM), stoneDamage (new petrification behavior of Medusa and Perseus special attacks), acid (Argus special attack behavior for Legacy AoM) and sand."
          },
          {
            "name": "damage",
            "description": "Damage to be applied for onHitEffect. Only applicable for Freeze onHitEffect with stoneDamage freezeType."
          },
          {
            "name": "amount",
            "description": "Unit amount to be spawned through a Spawn onHitEffect."
          },
          {
            "name": "attachBone",
            "description": "Target attach bone for Attach onHitEffects."
          },
          {
            "name": "shadingType",
            "description": "OnHitEffect shading type. Only applicable for ProgShading, ShadingFade and Shading onHitEffects."
          },
          {
            "name": "fadeTime",
            "description": "OnHitEffect fade time for target shading change. Only applicable for ShadingFade onHitEffects."
          },
          {
            "name": "factor",
            "description": "Target factor for onHitEffect shading change. Only applicable for Shading and ShadingFade onHitEffects."
          },
          {
            "name": "anim",
            "description": "Animation. Only applicable for AnimOverride onHitEffects."
          },
          {
            "name": "protoAction",
            "description": "Infection protoAction. Only applicable for Infect onHitEffects."
          },
          {
            "name": "hideVFX",
            "description": "Does not spawn default Stun VFX when set to ‘true’. Only applicable for Stun onHitEffects Beyond that, additional data can be assigned to an onHitEffect through the following child nodes."
          },
          {
            "name": "Modify",
            "description": "Assigns a modifier towards a particular modify type to this onHitEffect. Only applicable for StatModify, Boost and SelfModify onHitEffects. Takes the following parameters:",
            "syntax": "",
            "parameters": [
              {
                "name": "type",
                "description": "Modify type for modifier",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "dmgType",
                "description": "Damage type for ArmorSpecific and DamageSpecific modify types.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "applyType",
                "description": "Modifier apply type. Can be set to set, add or multiply. Defaults to multiply. Not applicable to all modify types.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "stack",
                "description": "If present, modifier will be allowed stack, allowing it to be applied more than once at the same time.",
                "syntax": "<OnHitEffect type='StatModify' duration='5.000000'>\n<Modify type='ROF'>2.000000</Modify>\n<Modify type='Speed'>0.500000</Modify>\n</OnHitEffect>",
                "parameters": []
              }
            ]
          },
          {
            "name": "ModifyRamp",
            "description": "Assigns a modifier towards a particular modify type to this onHitEffect, with a rate that, during the duration of the effect, varies linearly from a defined initial value to a final value. Takes the same attributes as Modify, plus the following:",
            "syntax": "",
            "parameters": [
              {
                "name": "init",
                "description": "Defines initial value for modifier.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "final",
                "description": "Defines final value for modifier.",
                "syntax": "<OnHitEffect type='Boost' duration='5.000000' radius='10.000000'>\n<ModifyRamp type='Speed' init='1.500000' final='1.000000' />\n<ModifyRamp type='Damage' init='1.500000' final='1.000000' />\n</OnHitEffect>",
                "parameters": []
              }
            ]
          },
          {
            "name": "Target",
            "description": "Sets valid or restricted target data for a provided OnHitEffect. Unlike targetUnitType parameter, though, does not allow multiple OnHitEffects towards the same type to be defined if set to have distinct target data. Takes either of the following parameters:",
            "syntax": "",
            "parameters": [
              {
                "name": "AttackType",
                "description": "Defines a valid target type for the onHitEffect.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "IgnoreType",
                "description": "Defines a restricted target type for the onHitEffect.",
                "syntax": "<OnHitEffect type='Attach' proto='VFXPoison' duration='5.000000'>\n<Target AttackType='Unit' />\n<Target IgnoreType='AbstractTitan' />\n</OnHitEffect>",
                "parameters": []
              }
            ]
          },
          {
            "name": "Damage",
            "description": "Defines per-type damage data for a DamageOverTime onHitEffect, that will account for protoAction damage bonuses and target unit’s armor. Takes one parameter, type, which sets the intended damage type.",
            "syntax": "<OnHitEffect type='DamageOverTime' duration='1.000000'>\n<Damage type='Pierce'>30.000000</Damage>\n<Damage type='Divine'>8.000000</Damage>\n</OnHitEffect>",
            "parameters": []
          }
        ]
      },
      {
        "name": "Charged",
        "description": "Sets up a charged modifier data for a ProtoAction, which can be activated under defined conditions. Takes the following attributes as children nodes:",
        "syntax": "<Charged>\n<ChargedModify modifytype='Armor' applytype='Multiply'>1.0</ChargedModify>\n<ChargedModifyAgeBonus age='ClassicalAge' applytype='Add'>0.1</ChargedModifyAgeBonus>\n<ChargedModifyAgeBonus age='HeroicAge' applytype='Add'>0.2</ChargedModifyAgeBonus>\n<ChargedModifyAgeBonus age='MythicAge' applytype='Add'>0.3</ChargedModifyAgeBonus>\n<ChargedModifyAgeBonus age='WonderAge' applytype='Add'>0.3</ChargedModifyAgeBonus>\n<ChargedModifyVFX>VFXOpportuneTime</ChargedModifyVFX>\n<ActivationType>Combat</ActivationType>\n<Duration>5.0</Duration>\n<Cooldown>40.0</Cooldown>\n</Charged>",
        "parameters": [
          {
            "name": "ChargedModify",
            "description": "Sets core modify data. Takes the following attributes:",
            "syntax": "",
            "parameters": [
              {
                "name": "modifyType",
                "description": "Sets modify type.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "param",
                "description": "Sets damage type for ArmorSpecific and DamageSpecific modify types.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "applyType",
                "description": "Sets apply type for modifier. Can be set to set, add or multiply. Defaults to multiply. Not applicable to all modify types.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "modifyAmountCap",
                "description": "Sets limit for maximum modify rate for this modifier, in cases where modifiers can be altered either through action-based stacking (e.g. handling done for StackControl protoActions) or through age-based bonuses.",
                "syntax": "<Charged>\n<ChargedModify modifytype='LifeSteal' applytype='Set'>0.8</ChargedModify>\n<Duration>10</Duration>\n<Cooldown>0</Cooldown>\n<ActivationType>KillEnemy</ActivationType>\n</Charged>",
                "parameters": []
              }
            ]
          },
          {
            "name": "ChargedModifyAgeBonus",
            "description": "Sets age-based bonuses for this modifier. Takes the following parameters:",
            "syntax": "",
            "parameters": [
              {
                "name": "age",
                "description": "Age in which this modifier bonus entry will be applied.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "applyType",
                "description": "Apply type for this modifier bonus entry. Can be set to set, add or multiply. Does not replace apply type for the modifier, but only determines how the current modify bonus entry will alter the modifier value, once active.",
                "syntax": "",
                "parameters": []
              }
            ]
          },
          {
            "name": "ChargedRemove",
            "description": "If set to ‘true’, causes the last instantiated ChargedModify action to be removed upon activation. Used for stack depletion actions within stackable effect management (i.e. as used by Taotie)."
          },
          {
            "name": "ChargedModifyVFX",
            "description": "VFX protoUnit to be spawned upon modifier activation."
          },
          {
            "name": "ChargedModifyVFXDuration",
            "description": "VFX duration in seconds."
          },
          {
            "name": "HitpointsRatioThreshold",
            "description": "Hitpoint threshold below which modifier will be activated if ActivationType is set to BelowHitpointsThreshold."
          },
          {
            "name": "Stealth",
            "description": "If present, unit will enter stealth mode upon modifier activation."
          },
          {
            "name": "ActivationType",
            "description": "Determines which event triggers modifier activation. Can be set to Combat (activated by combat start), BelowHitpointsThreshold (activated if unit is below a given hitpoint ration), AfterAction (activated after completion of a particular action), KillEnemy (activated after killing an enemy unit), UseByAbility (activated when manually cast), UseOnce (single-usage), TerrainType (activated when unit is over a provided terrain type), Always (always active, as long as protoAction is Active), ChargedActionActive and AuxChargedActionActive (reliant on recharge state for main and auxiliary charges, respectively)."
          },
          {
            "name": "VFXActivationType",
            "description": "Unused and deprecated.",
        "deprecated": true
          },
          {
            "name": "Cooldown",
            "description": "Charged modify cooldown in seconds."
          },
          {
            "name": "Duration",
            "description": "Charged modify duration in seconds."
          },
          {
            "name": "SetTactic",
            "description": "Tactic to be set once modifier is activated."
          },
          {
            "name": "TerrainType",
            "description": "Terrain type for modifier activation, when ActivationType is set to TerrainType. Can be set to Water or Land."
          },
          {
            "name": "ChargedModelAttachment",
            "description": "Animfile path for charged modifier attachment."
          },
          {
            "name": "ChargedModelAttachmentBone",
            "description": "Bone for charged modifier attachment."
          }
        ]
      },
      {
        "name": "StackControl",
        "description": "Defines stackable bonus/effect handling data for a StackControl protoAction. Takes the following parameters, defined as child nodes:",
        "syntax": "",
        "parameters": [
          {
            "name": "StackMax",
            "description": "Maximum amount of times effects from the protoAction defined in StackAddAction can be applied over the unit and StackSubAction can be cast/used."
          },
          {
            "name": "StackAddAction",
            "description": "ProtoAction that applies actual stacakble bonuses/effects."
          },
          {
            "name": "StackSubAction",
            "description": "ProtoAction that can be used once per stacked bonus/effect. Depletes one bonus/effect stack per usage."
          }
        ]
      },
      {
        "name": "TrailProtoUnit",
        "description": "Sets trail data for Trail protoActions or VFX data for IdleStatBonus protoActions. Takes one attribute, frequency, which defines the time interval in which the proto unit is spawned while the unit is performing movement for Trail protoActions or the number of tiers/levels for VFX spawning for IdleStatBonus protoActions.",
        "syntax": "<TrailProtoUnit frequency='0.25'>FeiTrail</TrailProtoUnit>",
        "parameters": []
      }
    ],
    "Flags": [
      {
        "name": "AttackAction",
        "description": "Sets protoAction as a valid attack action."
      },
      {
        "name": "Active",
        "description": "Sets protoAction as active."
      },
      {
        "name": "ActiveIfContainsUnits",
        "description": "Causes protoAction to be actually active only while units are garrisoned. Only functional for attack actions, and AutoConvert, AutoGather, AutoRangedModify, Maintain, ModifyGather and Spawn protoActions."
      },
      {
        "name": "ScaleByContainedUnits",
        "description": "Scales attack according to the amount of garrisoned units. Shouldn’t be set if protoAction is supposed to use ScaleByContainedUnitType."
      },
      {
        "name": "HandLogic",
        "description": "Defines protoAction as a hand attack action."
      },
      {
        "name": "RangedLogic",
        "description": "Defines protoAction as a ranged attack action."
      },
      {
        "name": "SpeedBoost",
        "description": "Causes unit speed to be boosted by a predefined factor upon attacking."
      },
      {
        "name": "TargetSpeedBoost",
        "description": "Causes target unit speed to be hindered by a predefined factor upon attacking."
      },
      {
        "name": "Persistent",
        "description": "Causes protoAction to be persistently processed."
      },
      {
        "name": "AddResourcesToInventory",
        "description": "If set, AutoGather action will deposit resources within unit’s inventory, instead of the player’s stockpile."
      },
      {
        "name": "AddResourcesFasterWhenOwned",
        "description": "If set, AutoGather actions will generate resources 25% faster wen owned by a non-Nature/Gaia player;"
      },
      {
        "name": "SingleUse",
        "description": "Causes protoAction to be useable only once. Only valid for AutoGather, Build, Maintain, Spawn and Attaching."
      },
      {
        "name": "SingleUsePlayer",
        "description": "For Spawn, causes protoAction to be effectively deactivated, preventing other instances of this unit from using it."
      },
      {
        "name": "Throw",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "InitialROF",
        "description": "Requires unit to reload before performing the first attack."
      },
      {
        "name": "Linear",
        "description": "For Maintain actions, causes the number of produced units to be incremented by one at each iteration. The maximum number of units that can be produced in a iteration is capped by the work rate value."
      },
      {
        "name": "NoCost",
        "description": "Causes manually set AutoRepair protoActions to not cost resources."
      },
      {
        "name": "BaseDamageCap",
        "description": "Causes area attack actions to not account for damage bonuses for damage cap checking."
      },
      {
        "name": "DropsiteGathering",
        "description": "Enables dropsite gathering for gathering actions."
      },
      {
        "name": "TargetGround",
        "description": "Causes ranged actions to use the ground position of the unit as a reference for targeting."
      },
      {
        "name": "InstantBallistics",
        "description": "Causes projectiles to travel instantly, instead of at their movement speed."
      },
      {
        "name": "SelfDestruct",
        "description": "Causes unit to self-destruct upon attacking."
      },
      {
        "name": "PerfectAccuracy",
        "description": "Causes ranged attack to be fully accurate on non-moving targets."
      },
      {
        "name": "ChargeAction",
        "description": "Sets this protoAction as a charged attack action."
      },
      {
        "name": "ShowQueueWhileWaiting",
        "description": "If set, Maintain actions will be shown in both the unit queue and the global game queue, if they are on waiting state. Set to 1 by default."
      },
      {
        "name": "DoNotAutoGatherUnlessGathering",
        "description": "If set, it will cause the AutoGather action to not generate resources if unit isn’t performing a gathering action."
      },
      {
        "name": "TargetEnemy",
        "description": "Causes an AutoRangedModify action to affect only enemy units."
      },
      {
        "name": "ModifyExclusive",
        "description": "Causes other AutoRangedModify actions sharing the same modifyType to not be processed."
      },
      {
        "name": "ExcludeFromRangeIndicator",
        "description": "Excludes action from being processed for range decal displaying."
      },
      {
        "name": "CastWhenAnimationFinished",
        "description": "Deprecated.",
        "deprecated": true
      },
      {
        "name": "TargetGaia",
        "description": "Causes an AutoRangedModify action to affect only Gaia units."
      },
      {
        "name": "DoNotIgnoreDead",
        "description": "Causes an AutoRangedModify action to also affect dead units."
      },
      {
        "name": "DeadExclusive",
        "description": "Restrict an AutoRangedModify action to only affect dead units."
      },
      {
        "name": "SingleUnit",
        "description": "Causes an AutoRangedModify action to only affect a single target."
      },
      {
        "name": "IncludeNature",
        "description": "Causes an AutoRangedModify action to affect Gaia units, besides of player units."
      },
      {
        "name": "HideFromStats",
        "description": "Hides protoAction from unit stats."
      },
      {
        "name": "ForceUpdateMode",
        "description": "Forces units affected by an AutoRangedModify action set to not persistently update (i.e. with the StartOnNoUpdate protoUnit flag set) to full update state, allowing them to be properly affected by auras."
      },
      {
        "name": "ModifySelf",
        "description": "Causes AutoRangedModify and LikeBonus actions to affect the source unit."
      },
      {
        "name": "AuxChargeAction",
        "description": "Sets this protoAction as a secondary charged attack action."
      },
      {
        "name": "CannotBeConvertedByAllies",
        "description": "Prevents an AutoConvert action from causing a friendly player from capturing the unit."
      },
      {
        "name": "TargetUnbuilt",
        "description": "Restricts an AutoRangedModify action to only affect targets which aren’t fully built (i.e. building foundations and buildings under construction)."
      },
      {
        "name": "TargetEnemyIncludeNature",
        "description": "Causes an AutoRangedModify action to affect only enemy or gaia units."
      },
      {
        "name": "NoStack",
        "description": "Prevents more than one instance of an AutoRangedModify action of the same source unit from affecting the same target unit, while still allowing it to be affected by other AutoRangedModify actions set to the same modifyType."
      },
      {
        "name": "SquareAura",
        "description": "Causes the area of effect of an AutoRangedModify action to be a square, instead of circular."
      },
      {
        "name": "GatherLinkedResource",
        "description": "Causes an AutoGather action to consume socketed resources to generate resources."
      },
      {
        "name": "DontKillWhenExpired",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "RestrictToGatherers",
        "description": "Restricts an AutoRangedModify action to only affect units gathering from the source unit."
      },
      {
        "name": "HealNonIdle",
        "description": "Allows a Heal action to heal units which wouldn’t receive full heal rate (i.e. units that aren’t idle, nor are performing gathering, healing or building, or that have been attacked or performed any attack on the last 3s). Set by default."
      },
      {
        "name": "IncludeAlly",
        "description": "Causes an AutoRangedModify action to affect allied units, besides of player units."
      },
      {
        "name": "ModifyRateByType",
        "description": "Causes a LikeBonus protoAction to have inverted aura behaviour, making nearby units within the area defined by MaxRange of the unitType defined in ModifyAbstractType to contribute to the bonus applied to the source unit by rates defined through the WorkRate entries."
      },
      {
        "name": "ModifySingleActionByType",
        "description": "Causes AutoRangedModifyAction to not target an unit if it’s already affected by another action set to the same ModifyType."
      },
      {
        "name": "NoStackIgnorePUID",
        "description": "When set alongside with NoStack, also prevents instances of the protoAction from other protoUnits from affecting the same target unit."
      },
      {
        "name": "AutoGatherScaleByGatherRate",
        "description": "Causes AutoGather rate to be affected by the current gather rate of the unit."
      },
      {
        "name": "SpawnIgnoreBuildLimit",
        "description": "Causes a Spawn action to spawn units, regardless of build limit."
      },
      {
        "name": "HandAttackDisplayRange",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AttachForceDieWithUnit",
        "description": "When in an Attaching action, causes an unit without lifespan set attached to an enemy unit to be forcibly removed once the unit dies."
      },
      {
        "name": "DisableAutoAttack",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "RestrictToIdleUnits",
        "description": "Restricts an AutoRangedModify action to only affect units that are currently idle."
      },
      {
        "name": "RestrictToValidRepairTargets",
        "description": "Restricts an AutoRangedModify action to only affect units that are valid targets for the Repair command."
      },
      {
        "name": "KeepAlive",
        "description": "Forces a single-use Maintain or Spawn action to be kept alive, internally, preventing it from being re-triggered, in case persistent actions are reloaded through tactic switching."
      },
      {
        "name": "ModifyRangeUseLOS",
        "description": "Causes an AutoRangedModify action to use the current unit’s LOS as its effective range."
      },
      {
        "name": "AttachValidTargetOnly",
        "description": "Causes AttachProtoUnits to only be spawned when the attack action has properly targeted a living valid target."
      },
      {
        "name": "SpawnOnAnimationLoop",
        "description": "For Spawn protoActions,causes spawning to be performed once the current unit animation ends."
      },
      {
        "name": "DestroyUnitAfterUse",
        "description": "For Spawn protoActions, causes source unit to be killed after spawning action is performed when used alongside with the SpawnOnAnimationLoop protoAction flag."
      },
      {
        "name": "ModifySelfOnly",
        "description": "Restricts an AutoRangedModify protoAction to only affect the current unit."
      },
      {
        "name": "AutoGatherTeam",
        "description": "For AutoGather actions, causes the resource trickle to benefit all players within the team, instead of just the owner of the unit."
      },
      {
        "name": "CannotBeConvertedByEnemies",
        "description": "Prevents an AutoConvert action from causing an enemy player to capture the unit."
      },
      {
        "name": "ForceSpawn",
        "description": "Forces a Spawn action to be processed, and executed if/when applicable, by the game, in case it’s assigned to a starting unit or building."
      },
      {
        "name": "ConvertToNatureIfForbidden",
        "description": "For AutoConvert actions, causes unit to be converted to Nature/Gaia, in case it’s captured by a player who has been forbidden from capturing the current unit through scenario or RM triggers."
      },
      {
        "name": "IncludeEnemy",
        "description": "For inverted aura actions (LikeBonus with ModifyRateByType flag set), causes valid Enemy units to be accounted for modifier calculation."
      },
      {
        "name": "Pausable",
        "description": "Allows a Maintain action to be paused by right-clicking over it on in-game HUD. Set by default."
      },
      {
        "name": "IncludeUnbuilt",
        "description": "Allows an AutoRangedModify action to affect targets which aren’t fully built (i.e. building foundations and buildings under construction), without explicitly restricting to those."
      },
      {
        "name": "KillOnTrain",
        "description": "For Maintain protoActions, causes unit to be killed once unit generation is complete."
      },
      {
        "name": "RestrictIfEmpowered",
        "description": "Restricts an AutoRangedModify action to only affect units that are currently being empowered."
      },
      {
        "name": "WorkOnStoneUnits",
        "description": "Allows an attack action to target units that have been petrified through Legacy petrification effect."
      },
      {
        "name": "WorkOnFrozenUnits",
        "description": "Allows an attack action to target units that have been frozen. Set by default."
      },
      {
        "name": "CircularShockwave",
        "description": "Causes BuckAttack protoAction to perform a circular shockwave around the unit’s position."
      },
      {
        "name": "LinearShockwave",
        "description": "Causes BuckAttack protoAction to perform a linear shockwave (e.g. similar to Centimanus special attack) on the direction of the unit’s attack."
      },
      {
        "name": "HomingBallistics",
        "description": "Causes fired projectiles to perfectly follow target unit in its trajectory."
      },
      {
        "name": "PassThrough",
        "description": "Causes fired projectile to pass through multiple targets until reaching maximum action range, damaging any units it passes through, while stopping when reaching a building."
      },
      {
        "name": "AttackBoost",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ShockStun",
        "description": "If set, StunAttack events will be sent to attack action when dealing damage. Only applicable for Gore actions."
      },
      {
        "name": "AreaDamageIgnoreType",
        "description": "Causes area damage to affect units regardless on whether or not the protoAction has valid rates towards them."
      },
      {
        "name": "ForceAreaAttackTarget",
        "description": "Forces an attack action set to have a range lesser than 1 to perform area attack using target position as reference for damage propagation."
      },
      {
        "name": "DefaultAttack",
        "description": "Sets action as the default attack to be displayed on in-game UI stats panel."
      },
      {
        "name": "ContainScaleBaseDamage",
        "description": ""
      },
      {
        "name": "ModifyFlyingUnits",
        "description": "For AutoRangedModify actions, allows flying units to be affected."
      },
      {
        "name": "SendUnderAttackEvent",
        "description": "For AutoRangedModify actions that perform progressive damage, causes under attack events to be sent to affected units, ensuring that run away behavior is properly handled."
      },
      {
        "name": "TargetNonAlly",
        "description": "Restricts an AutoRangedModify action to only affect units belonging to players that are not allied with unit owner (including Neutral players)."
      },
      {
        "name": "FullDamageMainTarget",
        "description": "For attack actions set to perform area damage, full damage is dealt to main target, regardless its distance to area damage epicenter."
      },
      {
        "name": "Exclusive",
        "description": "Restricts action to only be used towards units that aren’t already being targeted or otherwise affected by an instance of this action."
      },
      {
        "name": "PassThroughBuildings",
        "description": "Causes fired projectile to pass through multiple targets, including buildings, until reaching maximum action range, damaging any units it passes through."
      },
      {
        "name": "ForceAreaAttackCenter",
        "description": "Forces an attack action set to have a range greater than or equal to 1 to perform area attack using attacker position as reference for damage propagation."
      },
      {
        "name": "PreDamageAction",
        "description": "Causes onHitEffects to be applied before actual damage is dealt."
      },
      {
        "name": "CharmedConvert",
        "description": "Enables charmed conversion behavior for Convert actions."
      },
      {
        "name": "SuspendByAttack",
        "description": "Sets an AutoRangedModify action to be suspended while attack is being performed."
      },
      {
        "name": "FaceToAfterTeleport",
        "description": "For TeleportAttack protoActions, causes unit to face its target after teleporting to it."
      },
      {
        "name": "BackToAfterTeleport",
        "description": "For TeleportAttack protoActions, causes unit to face the opposite direction to its target after teleporting to it."
      },
      {
        "name": "OnlyAnimMove",
        "description": "For DelayedTransform actions, prevents actual position change from being done during transform sequence, if unit is to perform taking off from a landed state into a flying state or vice-versa."
      },
      {
        "name": "MustFinishAnimation",
        "description": "For DelayedTransform actions, prevents it from being cancelled/interrupted by player commands."
      },
      {
        "name": "TerrainAnimVariation",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AreaDamageIgnoreTacticAttackType",
        "description": "Causes area damage to affect units regardless on whether or not they are regarded as valid targets by Tactic data."
      },
      {
        "name": "AttachAboveUnit",
        "description": "Causes attachment for an AutoRangedModify action to be placed above the unit if bone is set to bonethatdoesntexist."
      },
      {
        "name": "AutoCastBySelf",
        "description": "Allows actions set as charged actions, but which do not or cannot take an explicit enemy target, to be auto-activated if the unit has the CastAbilitySelf protoUnit flag set."
      },
      {
        "name": "NotSuspendByAttack",
        "description": "For IdleStatBonus protoActions, causes rate increase to not be halted while unit is performing an attack, if its position has not changed."
      },
      {
        "name": "AutoRetarget",
        "description": "For attack actions that have multiple attack events defined within attack animation, allows attack sequence to continue by locating a new target, if it’s main target has died before attack sequence is complete."
      },
      {
        "name": "CanAttackGround",
        "description": "For attack actions with AutoRetarget flag set, allows attack to be directed at ground, if no new targets have been found."
      },
      {
        "name": "ModifyAttachOnce",
        "description": "For AutoRangedModify action, prevents attachment from being attached to the unit more than once, if it happens to be affected by multiple instances of that protoAction."
      },
      {
        "name": "ModifySelfIfInfection",
        "description": "Causes an AutoRangedModify action to affect the unit it’s assigned to, if it has been assigned through an infection effect."
      },
      {
        "name": "DoNotAutoGatherIfGathered",
        "description": "Prevents an AutoGather protoAction from generating resources, if unit has been gathered."
      },
      {
        "name": "ProgressiveYield",
        "description": "For AutoGather protoActions, causes resource generation rate to linearly grow from its base amount (defined through a MinRate entry) to its final amount (defined in the Rate entry for the given resource) through the time defined in seconds through the yield attribute."
      }
    ],
    "Modify Types": [
      {
        "name": "Speed",
        "description": "Unit maximum speed."
      },
      {
        "name": "MaxHP",
        "description": "Unit maximum hit points."
      },
      {
        "name": "Damage",
        "description": "Unit damage. Affects all damage types."
      },
      {
        "name": "MovingDamage",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "SiegeDamage",
        "description": "Unit siege damage. Affects, specifically, the damage inflicted against buildings and ships, and not necessarily all protoActions with the damageType set to Siege."
      },
      {
        "name": "Bounty",
        "description": "Kill bounty obtained by affected units."
      },
      {
        "name": "UnitDamage",
        "description": "Damage inflicted against units (as in non-buildings and non-ships)."
      },
      {
        "name": "LOS",
        "description": "Line of Sight. Increases unit’s LOS linearly, rather than in a multiplicative manner."
      },
      {
        "name": "Armor",
        "description": "Unit armor. Affects all damage types."
      },
      {
        "name": "GatherRate",
        "description": "Gather rate for all resources."
      },
      {
        "name": "AbilityROF",
        "description": "Ability cooldown time for power set in ModifyProtoPower. Does not affect abilities with global cooldown or using charging time."
      },
      {
        "name": "ROF",
        "description": "Unit rate of fire."
      },
      {
        "name": "AutoGatherRate",
        "description": "AutoGather rate for all actions."
      },
      {
        "name": "UnitResource",
        "description": "Consumes resource inventory for natural resources at a linear rate, based on the ModifyAmount attribute value."
      },
      {
        "name": "BaseHP",
        "description": "Unit hit points, applied over base protoUnit hitpoints, instead of the current value."
      },
      {
        "name": "BuildingWorkRate",
        "description": "Building Work Rate."
      },
      {
        "name": "BuildRate",
        "description": "Affects Building construction rate when affecting builders. Affects auto-building rate when affecting foundations placed by wagons."
      },
      {
        "name": "Chaos",
        "description": "Enables Chaos behaviour on affected units."
      },
      {
        "name": "FarmingGatherRate",
        "description": "Gather rate for farm objects (AbstractFarm unitType)."
      },
      {
        "name": "InfluenceRate",
        "description": "Rate in which resources gathered by affected units will be converted into Influence."
      },
      {
        "name": "HealRate",
        "description": "Linear heal rate, or progressive damage, if set as a negative value. For buildings, hit points addition/subtraction will be percentage-based."
      },
      {
        "name": "AutoGatherAbsolute",
        "description": "AutoGather rate for all actions with a rate greater than zero. Adds to the AutoGather rate linearly, instead of multiplying."
      },
      {
        "name": "RepairCost",
        "description": "Building repair cost."
      },
      {
        "name": "TrainingRate",
        "description": "Building unit training rate."
      },
      {
        "name": "EconomicTrainingRate",
        "description": "Building economic unit training rate."
      },
      {
        "name": "MilitaryTrainingRate",
        "description": "Building military unit training rate."
      },
      {
        "name": "ResearchRate",
        "description": "Building technology researching rate."
      },
      {
        "name": "ResourceGatherRate",
        "description": "Resource gathering rate multiplier for gatherers gathering from the affected unit."
      },
      {
        "name": "ResourceYield",
        "description": "Resource yield rate multiplier for gatherers gathering from the affected unit."
      },
      {
        "name": "NaturalFoodGatherRate",
        "description": "Gather rate for natural food sources (targets with Food as their main resource and either Nature or NatureClass types set)."
      },
      {
        "name": "TreeGatherRate",
        "description": "Gather rate for trees."
      },
      {
        "name": "MineGatherRate",
        "description": "Gather rate for mines (MinedResource unitType)."
      },
      {
        "name": "AutoBuildRate",
        "description": "Auto-building rate for foundations placed by wagons."
      },
      {
        "name": "PeaceFlag",
        "description": "Causes affected units to be perceived as friendly units by enemies, preventing them from being attacked by enemy units and vice-versa."
      },
      {
        "name": "BaseDamage",
        "description": "Unit damage, applied over base protoUnit damage, instead of the current value."
      },
      {
        "name": "BuildBounty",
        "description": "Building build bounty. Does not affect resources other than XP."
      },
      {
        "name": "RechargeTime",
        "description": "Charged action recharge time. Affects both main and auxiliary recharge times."
      },
      {
        "name": "Range",
        "description": "Maximum range."
      },
      {
        "name": "RangeAbsolute",
        "description": "Maximum range. Adds linearly, instead of multiplying."
      },
      {
        "name": "Shield",
        "description": "Redirects damage received by targeted units by the rate defined in ModifyMultiplier. For units affected by multiple Shield auras, redirected damage is split between aura sources."
      },
      {
        "name": "FavorGatherRate",
        "description": "Unit AutoGather rate for Favor."
      },
      {
        "name": "DropsiteRate",
        "description": "Multiplier applied over resources deposited at this unit."
      },
      {
        "name": "DoubleTrainChance",
        "description": "Chance of spawning an additional unit after successful training."
      },
      {
        "name": "GodPowerBlockRadius",
        "description": ""
      },
      {
        "name": "AuraEmpower",
        "description": "Propagates empowering effects defined in ProtoAction data towards all units affected by the aura."
      },
      {
        "name": "MilitaryTrainingCost",
        "description": "Training cost for military units from this unit."
      },
      {
        "name": "DamageSpecific",
        "description": "Type-specific damage. Damage type is defined by the ModifyDamageType protoAction attribute."
      },
      {
        "name": "ArmorSpecific",
        "description": "Type-specific armor. Damage type is defined by the ModifyDamageType protoAction attribute."
      },
      {
        "name": "AutoGatherFactor",
        "description": "Factor by which total AutoGather rate for this unit will be divided by."
      },
      {
        "name": "NumProjectiles",
        "description": "Number of projectiles fired by ranged attack actions. Adds to base number of projectiles linearly, instead of in a multiplicative manner."
      },
      {
        "name": "VisualScale",
        "description": "Unit visual scale."
      },
      {
        "name": "ProgFreezeSpeed",
        "description": "Rate by which unit’s movement speed is lowered."
      },
      {
        "name": "LOSFactor",
        "description": "Line of Sight. Increases unit’s LOS in a multiplicative manner, rather than linearly."
      },
      {
        "name": "ForcedTarget",
        "description": "Causes affected units to become uncontrollable and forcibly attack aura source unit."
      },
      {
        "name": "RevealUI",
        "description": "Reveals in-game UI and queue for this unit to source player of the aura."
      },
      {
        "name": "MaxShieldPoints",
        "description": "Unit shield points."
      },
      {
        "name": "ShieldRegenRate",
        "description": "Regeneration rate for shield."
      },
      {
        "name": "BaseShieldPoints",
        "description": "Unit shield points, applied over base protoUnit shield, instead of the current value."
      },
      {
        "name": "GatherRateMultiplier",
        "description": "Unit gather rate multiplier applied over total collected resources."
      },
      {
        "name": "Invulnerable",
        "description": "Causes affected units to be invulnerable to attacks."
      },
      {
        "name": "LifeSteal",
        "description": "Dynamic rate for lifesteal effect, causing hitpoints of affected units to be restored by a rate of total inflicted damage against a target."
      },
      {
        "name": "DecaySpeed",
        "description": "Resource decay speed for dead animals."
      },
      {
        "name": "TradeRate",
        "description": "Multiplier applied over total trade income for this unit."
      },
      {
        "name": "DodgeChance",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ConstructionSuspended",
        "description": "Halts construction and repair progress for affected buildings."
      },
      {
        "name": "CommandResearchCost",
        "description": "ProtoUnitCommand research cost from this unit."
      },
      {
        "name": "UnitRegenRate",
        "description": "Unit regeneration rate defined through protoUnit or civilization data."
      }
    ],
    "OnHitEffect Types": [
      {
        "name": "Stun",
        "description": "Stuns target unit for the defined duration."
      },
      {
        "name": "StatModify",
        "description": "Applies the modifiers defined within OnHitEffect data for the provided duration. Modifiers applied by the same ProtoAction do not stack."
      },
      {
        "name": "Snare",
        "description": "Ensnares the target unit by the provided duration, modifying its speed by the value provided in the rate attribute. Snare effects do not stack: when a unit is affected by multiple snare effects, the one with the lowest multiplier will be prioritized."
      },
      {
        "name": "DamageOverTime",
        "description": "Applies damage over time for target unit, according to the damage values provided in the Damage children nodes or through the rate parameter, for the provided duration. Damage defines through the rate parameter does not account for damage bonuses or target armor."
      },
      {
        "name": "Lifesteal",
        "description": "Restores hitPoints for attacker by the percentage defined in rate of the total amount of damge inflicted against the target unit."
      },
      {
        "name": "Reincarnation",
        "description": "Causes target unit to transform into the protoUnit provided through the proto attribute and be converted to attacking player, if it dies during the duration of the effect."
      },
      {
        "name": "Throw",
        "description": "Throws target units. Throwing-related ProtoAction attributes override default hardcoded parameters whenever applicable"
      },
      {
        "name": "Freeze",
        "description": "Applies freezing effect for the effect duration, according to the type provided through the freezeType attribute."
      },
      {
        "name": "Boost",
        "description": "Applies modifiers defined within OnHitEffect data for all player-owned units belonging to the unitType defined through targetUnitType within the radius defined in the radius attribute. Modifiers applied by the same ProtoAction do not stack."
      },
      {
        "name": "Push",
        "description": "Pushes the target unit by the force provided through the radius parameter."
      },
      {
        "name": "Mutate",
        "description": "Mutates/transforms target unit into protoUnit defined in the proto attribute."
      },
      {
        "name": "MutateGaia",
        "description": "Mutates/transforms target unit into protoUnit defined in the proto attribute, converting it to Nature/Gaia."
      },
      {
        "name": "Attach",
        "description": "Attaches the protoUnit defined in the proto attribute. Effect duration determines the lifespan of the object to be attached."
      },
      {
        "name": "Pull",
        "description": "Pulls the target unit towards the attacker by the force provided through the radius parameter."
      },
      {
        "name": "Spawn",
        "description": "Spawns the protoUnit defined in the proto attribute by the amount defined in the amount attribute. If set, Effect duration determines the lifespan of the spawned objects."
      },
      {
        "name": "ProgFreezeSpeed",
        "description": "Progressively slows the target by the rate defined on the rate attribute each attack, causing it to be frozen when reaching 0 speed, by the duration provided in the freezeDuration attribute."
      },
      {
        "name": "Chaos",
        "description": "Causes target unit to remain uncontrollable and attack the closest unit for the provided druation."
      },
      {
        "name": "SelfModify",
        "description": "Applies modifiers defined within OnHitEffect data to the attacker."
      },
      {
        "name": "ProgFreezeROF",
        "description": "Progressively slows the target attack speed by increasing its ROF by the rate defined on the rate attribute each attack, causing it to be frozen as soon as its attack becomes 2X slower than its base attack, by the duration provided in the freezeDuration attribute."
      },
      {
        "name": "ProgShading",
        "description": "Sets shading type to be applied for progressive movement speed/ROF reduction to the type defined by the shadingType attribute. As the target unit’s speed/ROF is reduced by ProgFreezeSpeed or ProgFreezeROF effects, the factor for the provided shading type will be adjusted accordingly."
      },
      {
        "name": "ShadingFade",
        "description": "Applies a temporary shader to the target for the defined duration. Fading time for the shader is defined by the fadeTime attribute."
      },
      {
        "name": "TreeFlatten",
        "description": "Flattens a target tree using the same effect as used by the Implode god power."
      },
      {
        "name": "AnimOverride",
        "description": "Overrides target animation by the animation provided through the anim attribute for the provided duration."
      },
      {
        "name": "Shading",
        "description": "Permanently applies the shading type provided through the shadingType parameter with the factor provided through the factor parameter."
      },
      {
        "name": "Exile",
        "description": "Causes target to become invisible during the duration of the effect."
      },
      {
        "name": "Root",
        "description": "Progressively slows the target by the rate defined on the rate attribute, while spawning and attaching the protoUnit defined on the proto attribute. Once the target’s movement speed reaches zero, ensures it remains locked in place for the standard duration of the effect."
      },
      {
        "name": "Flee",
        "description": "Causes target to flee from attacker and remain uncontrollable for the duration of the effect."
      },
      {
        "name": "Infect",
        "description": "Assigns the AutoRangedModify protoAction defined through the protoAction to target for the given duration, while ensuring that, after assigned, affects units owned by the target unit’s owner."
      }
    ],
    "Tactic Data": [
      {
        "name": "Active",
        "description": "Defines whether the tactic is active or not. Set to 1 (Active) by default."
      },
      {
        "name": "Action",
        "description": "Adds a valid action for this tactic. Takes either of two attributes, priority, which defines choice priority for attack actions, or probability, which sets the chance percentage (as an integer from 0 to 100) of the given action to be activated by the unit when performing an attack."
      },
      {
        "name": "SpeedModifier",
        "description": "Modifier to be applied to unit movement speed after switching to the current tactic."
      },
      {
        "name": "MaxHPModifier",
        "description": "Modifier to be applied to unit hitpoints after switching to the current tactic."
      },
      {
        "name": "DamageModifier",
        "description": "Modifier to be applied to unit damage after switching to the current tactic."
      },
      {
        "name": "UnitDamageModifier",
        "description": "Modifier to be applied to unit damage against living targets (as in non-buildings and non-ships) after switching to the current tactic."
      },
      {
        "name": "AttackType",
        "description": "Unit type that defines valid attack targets. Tactics support multiple AttackType nodes."
      },
      {
        "name": "ExcludeAttackType",
        "description": "Restricted unit type for attack targets. Tactics support multiple ExcludeAttackType nodes."
      },
      {
        "name": "AutoAttackType",
        "description": "Unit type that defines valid auto-attack targets. If not set, auto-attack will be disabled for the current tactic."
      },
      {
        "name": "AttackResponseType",
        "description": "Unit type that defines valid retaliation targets."
      },
      {
        "name": "AttackMoveType",
        "description": "Valid attack type for targeting while performing attack move."
      },
      {
        "name": "RunAway",
        "description": "If set, enables running away behaviour."
      },
      {
        "name": "AutoRetarget",
        "description": "If set, units will look for other targets automatically, if current attack target becomes invalid"
      },
      {
        "name": "AgeRequirement",
        "description": "Minimum age required for this tactic to be available. Set as an integer value. Not handled by in-game UI."
      },
      {
        "name": "AbilityOnly",
        "description": "If set, tactic won’t be activable or togglable by any means other than abilities or charged modifiers."
      },
      {
        "name": "Transition",
        "description": "Not applicable for AoM: Retold."
      },
      {
        "name": "IdleAnim",
        "description": "Idle animation for current tactic."
      },
      {
        "name": "BoredAnim",
        "description": "Bored animation for current tactic."
      },
      {
        "name": "DeathAnim",
        "description": "Death animation for current tactic."
      },
      {
        "name": "WalkAnim",
        "description": "Movement animation for current tactic."
      },
      {
        "name": "MoveAnim",
        "description": "Movement animation for current tactic."
      },
      {
        "name": "JogAnim",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "RunAnim",
        "description": "Running animation for current tactic."
      },
      {
        "name": "ArmorOverride",
        "description": "Armor override value to be used when this tactic is set. Takes two attributes, type and value, which define, respectively, the armor type and armor value for the override. Requires UseTacticArmorOverride protoUnit flag to be set for proper functionality. When using this system, separate armor values will need to be defined for each tactic."
      },
      {
        "name": "AttackPriorityType",
        "description": "Denotes a unit type which will receive an additional bonus attack prioritization factor when this tactic is active. Takes one attribute, bonusFactor, which defines the bonus value to be added to the attack prioritization factor.",
        "syntax": "<AttackPriorityType bonusFactor='50.00'>MythUnit</AttackPriorityType>",
        "parameters": []
      }
    ]
  },
  "ProtoUnitCommands": {
    "Attributes": [
      {
        "name": "Name",
        "description": "ProtoUnitCommand internal name."
      },
      {
        "name": "Command",
        "description": "Console command to be executed."
      },
      {
        "name": "Icon",
        "description": "ProtoUnitCommand icon path."
      },
      {
        "name": "ActiveIcon",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "DisabledIcon",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "AssociatedTech",
        "description": "Technology associated with the protoUnitCommand, defining command availability, cost and research time."
      },
      {
        "name": "TrainableUnitReq",
        "description": "Restricts the availability of this command on whether or not the given protoUnit is available for the current player."
      },
      {
        "name": "PrereqCommand",
        "description": "Binds the availability of this command on the previous execution of the given protoUnitCommand."
      },
      {
        "name": "DisplayNameID",
        "description": "String ID for protoUnitCommand displayed name."
      },
      {
        "name": "RolloverTextID",
        "description": "String ID for default protoUnitCommand rollover."
      },
      {
        "name": "ShortRolloverTextID",
        "description": "String ID for shortened protoUnitCommand rollover."
      },
      {
        "name": "ActiveRolloverTextID",
        "description": "For ProtoUnitCommands linked to Building Tactics, defines the rollover to be displayed when the tactic is currently active."
      },
      {
        "name": "DisabledRolloverTextID",
        "description": "String ID for protoUnitCommand rollover to be displayed when command cannot be currently issued, despite it’s being currently shown."
      },
      {
        "name": "BuildLimitTextID",
        "description": "String ID for protoUnitCommand build limit notification, for transform commands."
      },
      {
        "name": "ValueText",
        "description": "Value text to be displayed over protoUnitCommand icon."
      },
      {
        "name": "AssociatedPower",
        "description": "Associates the protoUnitCommand with the given protoPower, causing it to share cooldown with the protoPower."
      },
      {
        "name": "ForbidTech",
        "description": "Technology to be temporarily forbidden while this protoUnitCommand is being researched, if it’s associated with a technology."
      },
      {
        "name": "ProtoUnit",
        "description": "ProtoUnit to be spawned, if SpawnCommand is set."
      },
      {
        "name": "Amount",
        "description": "Amount of units to be spawned, if SpawnCommand is set."
      },
      {
        "name": "CostProtoUnit",
        "description": "Sets protoUnit whose cost will be shown as command cost. For researchable protoUnitCommands, effectively overrides cost obtained from associated tech."
      },
      {
        "name": "Age",
        "description": "Age in which protoUnitCommand is intended to be made available."
      },
      {
        "name": "SharedCommand",
        "description": "Sets a protoUnitCommand as a shared command, allowing it to be researched for selected units that have it assigned within their data, if the source command has the ResearchOnSelected flag set and has been activated."
      }
    ],
    "Flags": [
      {
        "name": "CommandPassesUnitID",
        "description": "If present, first integer printf parameter on command will be replaced by the internal ID of the current unit."
      },
      {
        "name": "UseMultiple",
        "description": "If present in a protoUnitCommand associated with a particular technology, it will allow the protoUnitCommand to be executed multiple times."
      },
      {
        "name": "DoNotAllowOverPopLimit",
        "description": "Forbids the command from being executed if player is above the population limit."
      },
      {
        "name": "DoNotAllowIfUnitDamaged",
        "description": "Forbids the command from being executed if current unit is damaged."
      },
      {
        "name": "RequireUnitDamaged",
        "description": "Forbids the command from being used if current unit is not damaged."
      },
      {
        "name": "BindToChargeAction",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "SpawnCommand",
        "description": "Causes protoUnitCommand to spawn units once executed. Requires the protoUnitCommand to be associated with a technology for proper functionality."
      },
      {
        "name": "CastPower",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "SocketBuild",
        "description": "If present, indicates that the current protoUnitCommand triggers a SocketBuild command, and causes it to display the cost, if applicable."
      },
      {
        "name": "DisplayAsPassive",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "NotCancellable",
        "description": "If present, protoUnitCommand, if researchable, won’t be cancellable once queued."
      },
      {
        "name": "Deploy",
        "description": "If present, denotes that this protoUnitCommand will perform a deployment action for a building which uses deployment ungarrisoning."
      },
      {
        "name": "SiteBasedCommand",
        "description": "Sets protoUnitCommand as a site-based command, allowing it to be visible within in-game UI even if selected unit is not within LOS, to be displayed and usable in some cases for units not owned by the current player, and hidden from UI if site-based commands are disabled through game settings."
      },
      {
        "name": "AllowedOnOtherPlayers",
        "description": "Allow this command to be displayed and executable for other players in a Nature/Gaia-owned object."
      },
      {
        "name": "Transform",
        "description": "If present, performs a transformation command, without performing checks for or relying on TransformCommand protoUnit attribute, or explicitly propagating the command to all selected units."
      },
      {
        "name": "TransformSelected",
        "description": "If present, when executed with multiple units selected, triggers the respective TransformCommand, if applicable, for each selected unit, excluding units belonging to the AbstractVillager unitType."
      },
      {
        "name": "TransformVillager",
        "description": "If present, when executed with multiple units selected, triggers the respective TransformCommand, if applicable, for each selected unit belonging to the AbstractVillager unitType."
      },
      {
        "name": "UnitCommand",
        "description": "If present, command will display blue frame on in-game UI around its icon, rather than black neutral border/frame."
      },
      {
        "name": "DisplayOnTarget",
        "description": "For transform commands, allows it to be displayed on UI if the main selected unit is a transformation target and at least one among the selected units can be transformed through this command or through commands set through the TransformCommand attribute."
      },
      {
        "name": "ResearchOnSelected",
        "description": "If present, when researching this command with multiple units selected, causes the same command (or commands set to be shared) to be researched through all selected units when applicable."
      },
      {
        "name": "Reusable",
        "description": "If present, allows a command that requires research/use tracking for proper handling (e.g. transform commands) to be re-usable over the same unit ID in some circumstances."
      },
      {
        "name": "SharedCommandHotkey",
        "description": "If set, shared command data will be accounted for when querying for the hotkey for this command."
      }
    ]
  },
  "Civilization/Major God Data": {
    "Attributes": [
      {
        "name": "Name",
        "description": "Internal Civilization name."
      },
      {
        "name": "Main",
        "description": "Denotes whether the civilization is meant to be a playable civilization, when set to 1, or a SubCiv/Revolution civilization, otherwise."
      },
      {
        "name": "StatsID",
        "description": "Deprecated.",
        "deprecated": true
      },
      {
        "name": "Culture",
        "description": "Civilization culture, as defined in culture data in cultures.xml."
      },
      {
        "name": "Key",
        "description": "Key to be used for fetching correct display string for units using rollovers with civilization-specific text."
      },
      {
        "name": "DisplayNameID",
        "description": "String ID for civilization/major god displayed name."
      },
      {
        "name": "RolloverNameID",
        "description": "String ID for civilization/major god rollover."
      },
      {
        "name": "TitleID",
        "description": "String ID for civilization/major god title, displayed in major god selection UI."
      },
      {
        "name": "Icon",
        "description": "Major god/civilization icon path, relative to game\\ui_myth."
      },
      {
        "name": "Portrait",
        "description": "Major god/civilization portrait path, relative to game\\ui_myth."
      },
      {
        "name": "BreakoutPortrait",
        "description": "Major god/civilization icon breakout portrait path, used in major god selection UI, relative to game\\ui_myth."
      },
      {
        "name": "MinimapBorderImage",
        "description": "Major god/civilization minimap border texture path, relative to game\\art."
      },
      {
        "name": "BackgroundScenario",
        "description": "Major god/civilization background scenario path, to be displayed on main menu background after playing as this major god/civilization, relative to game\\campaign."
      },
      {
        "name": "AgeTech",
        "description": "Assigns a technology, through a child Tech node, to be activated once the player reaches a given age, set through an age parameter.",
        "syntax": "<AgeTech age=\"ArchaicAge\">\n<Tech>ArchaicAgeFuxi</Tech>\n</AgeTech>",
        "parameters": []
      },
      {
        "name": "DeathMatchTech",
        "description": "Technology to be activated when in DeathMatch game mode."
      },
      {
        "name": "TeamTech",
        "description": "Technology to be activated for all team players at the beginning of the game, akin to AoE2 Team Bonuses. Multiple instances of the same civilization or the same technology don’t cause its effect to stack."
      },
      {
        "name": "EmpireWarsTech",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "BuildingEfficiency",
        "description": "Work rate multiplier to be applied to the second builder on foundations."
      },
      {
        "name": "ExtraBuildingEfficiency",
        "description": "Work rate multiplier for additional builders on foundations."
      },
      {
        "name": "BuildingRepairFactor",
        "description": "Building repair cost factor. Defaults to 0.5 if not set."
      },
      {
        "name": "StartingUnits",
        "description": "Sets up starting units for a given game mode for this major god/civilization. Takes one parameter, mode, which defines the game mode the units will be assigned to (can be set to supremacy, deathmatch and lightning; defaults to supremacy; game modes with no specific starting unit data set default to using supremacy data). Each starting unit entry is defined through Unit child nodes, which can take up the following attributes:",
        "syntax": "",
        "parameters": [
          {
            "name": "count",
            "description": "Unit count for starting unit entry"
          },
          {
            "name": "delay",
            "description": "Starting unit spawning delay in seconds."
          },
          {
            "name": "x",
            "description": "Position offset on the X axis for unit movement upon spawning."
          },
          {
            "name": "y",
            "description": "Position offset on the Y axis for unit movement upon spawning."
          },
          {
            "name": "z",
            "description": "Position offset on the Z axis for unit movement upon spawning."
          },
          {
            "name": "resourceAmount",
            "description": "Initial resource amount for spawned starting units. Requires protoUnit to support resource storage by default.",
            "syntax": "<StartingUnits mode='deathmatch'>\n<Unit count='9' delay='2' x='0.00' y='0.00' z='0.00'>VillagerGreek</Unit>\n<Unit count='1' delay='4' x='-12.00' y='0.00' z='0.00'>Kataskopos</Unit>\n</StartingUnits>",
            "parameters": []
          }
        ]
      },
      {
        "name": "StartingResources",
        "description": "Sets up starting resources for a given game mode for this major god/civilization. Takes one parameter, mode, which defines the game mode the provided starting resources will be assigned to, handled in the same way as it is for StartingUnits. Starting amount for a given resource is defined through a child node.",
        "syntax": "<StartingResources>\n<Food>200</Food>\n<Wood>250</Wood>\n<Gold>50</Gold>\n</StartingResources>",
        "parameters": []
      },
      {
        "name": "StartingQueue",
        "description": "Sets up starting queue for the player’s initial Town Center for a given game mode for this major god/civilization. Takes one parameter, mode, which defines the game mode the provided starting queue data will be assigned to, handled in the same way as it is for StartingUnits. Each queue entry is defined through a Unit entry, which can take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "autoTrain",
            "description": "Enables auto-queue for the given protoUnit when set to ‘true’, if applicable."
          },
          {
            "name": "preQueue",
            "description": "Adds given protoUnit to prequeue when set to ‘true’, if applicable."
          },
          {
            "name": "count",
            "description": "Amount of units to be queue. Not applicable if either autoTrain or preQueue are set."
          },
          {
            "name": "delay",
            "description": "Queue delay in milliseconds.",
            "syntax": "<StartingQueue mode='deathmatch'>\n<Unit autotrain='true'>VillagerGreek</Unit>\n<Unit prequeue='true'>Jason</Unit>\n</StartingQueue>",
            "parameters": []
          }
        ]
      },
      {
        "name": "TerrainCreeps",
        "description": "Sets up terrain creep data, which defines terrain modification data for buildings (e.g. as used for Gaia Lush handling). Terrain creep entries are defined through TerrainCreep children nodes, valid protoUnits for terrain creep spreading are assigned through ProtoUnit subchildren nodes. TerrainCreep nodes can take the following attributes:",
        "syntax": "",
        "parameters": [
          {
            "name": "creep",
            "description": "Terrain reep type, as defined in terrain_creep_types.xml."
          },
          {
            "name": "maxRadius",
            "description": "Maximum expansion radius out of a single building."
          },
          {
            "name": "growthRate",
            "description": "Terrain creep radius growth rate per game second."
          },
          {
            "name": "decayRate",
            "description": "Terrain creep radius decay rate per game second after a building gets destroyed."
          },
          {
            "name": "strength",
            "description": "Terrain creep strength. When expanding terrain creep to a terrain tile already taken by another terrain creep type, the terrain creep type with higher strength takes priority."
          },
          {
            "name": "minUpdateInterval",
            "description": "Minimum update interval in seconds for terrain creep expansion update."
          },
          {
            "name": "maxUpdateInterval",
            "description": "Maximum update interval in seconds for terrain creep expansion update."
          },
          {
            "name": "avoidUnbuildable",
            "description": "If present, terrain creep won’t expand to unbuildable tiles."
          },
          {
            "name": "avoidImpassable",
            "description": "If present, terrain creep won’t expand to impassable tiles."
          },
          {
            "name": "avoidShallowWater",
            "description": "If present, terrain creep won’t expand to shallow water tiles."
          },
          {
            "name": "allowDisconnectedGrowth",
            "description": "If present, terrain creep will be able to expand to tiles not directly adjacent to tiles already overtaken by terrain creep."
          },
          {
            "name": "buildability",
            "description": "Defines whether or not tiles overtaken by this terrain creep type will be unbuildable. Can take one of the following values: buildable (buildable by all players), unbuildable (unbuildable by all players), unbuildableSelf (unbuildable by owner), unbuildableOthers (unbuildable by players other than owner), unbuildableAllies (unbuildable by allied players, including owner), unbuildableEnemies (unbuildable by enemy players).",
            "syntax": "<TerrainCreeps>\n<TerrainCreep creep=\"GaiaCreep\" maxRadius=\"24.0\" growthRate=\"0.50\" decayRate=\"0.5\" minUpdateInterval=\"3.0\" maxUpdateInterval=\"4.0\" avoidUnbuildable=\"\" avoidImpassable=\"\">\n<ProtoUnit>TownCenter</ProtoUnit>\n<ProtoUnit>VillageCenter</ProtoUnit>\n<ProtoUnit>CitadelCenter</ProtoUnit>\n<ProtoUnit>Manor</ProtoUnit>\n<ProtoUnit>EconomicGuild</ProtoUnit>\n<ProtoUnit>Market</ProtoUnit>\n</TerrainCreep>\n</TerrainCreeps>",
            "parameters": []
          }
        ]
      },
      {
        "name": "Partisans",
        "description": "If set, enables the spawning of partisan units upon building destruction, if set in protoUnit data."
      },
      {
        "name": "Shades",
        "description": "If set, sets up data for spawning units upon the death of a particular unit type at one of the player’s temples, as used by the Hades Shade mechanic. Takes the following attributes, defined as child nodes:",
        "syntax": "",
        "parameters": [
          {
            "name": "ProtoUnit",
            "description": "ProtoUnit to be spawned upon death of valid units."
          },
          {
            "name": "TargetUnit",
            "description": "Defines a valid unit type for triggering spawning upon death. Multiple TargetUnit children nodes can be set."
          },
          {
            "name": "Chance",
            "description": "Chance of triggering spawn upon death, set as a floating-point value between 0 and 1."
          },
          {
            "name": "Delay",
            "description": "Spawning delay in seconds.",
            "syntax": "<Shades>\n<ProtoUnit>HadesShade</ProtoUnit>\n<TargetUnit>HumanSoldier</TargetUnit>\n<Chance>0.2</Chance>\n<Delay>10.0</Delay>\n</Shades>",
            "parameters": []
          }
        ]
      },
      {
        "name": "BonusUnitSpawning",
        "description": "Sets data for goal-based unit spawning. Mechanic can be set as enabled or disabled by default according to the value of an Active child node. Multiple goals can be assigned, which are defined through children nodes, setting the goal type (i.e. events that contribute to or trigger unit spawning):",
        "syntax": "",
        "parameters": [
          {
            "name": "DamageGoal",
            "description": "Sets up a damage-based goal, causing units will be spawned, based on the total damage inflicted by unit types defined within goal data."
          },
          {
            "name": "DeathCountGoal",
            "description": "Sets up a goal based on units lost by the player, causing units to be spawned according to the total amount of units lost belonging to given types defined within goal data."
          },
          {
            "name": "ResourceGoal",
            "description": "Sets up a goal based on resource gathering, causing units to be spawned based on the total amounts of resources gathered of types defined within goal data. Each goal can take the following inline attributes:"
          },
          {
            "name": "name",
            "description": "Internal goal name, to be used for indexing and for modifying goal data through technology effects."
          },
          {
            "name": "rewardTracking",
            "description": "Sets how reward progress will be tracked for unit spawning. Can be set to either Single (reward progress is unified, and all damage done or units lost by/of valid unit types contribute to the progress of next unit to be spawned, which is randomly picked), or PerPossibleReward (progress is tracked separately for each potential spawning reward, and damage done or units lost by/of valid unit types only contribute for the spawning of units belonging of the same protoUnit). Resource goals only support Single reward tracking type. The following additional data can be assigned to a goal as children nodes:"
          },
          {
            "name": "Reward",
            "description": "UnitType for potential spawn rewards. Multiple Reward nodes can be assigned to a single goal."
          },
          {
            "name": "Contributor",
            "description": "Defines valid unit types (for Damage and DeathCount goals) or gatherable resource types (for Resource goals) for reward progress and their contribution rates, which determines how much each obtained reward point from either that unit type or that resource actually contribute to reward progress. Takes either a unit or type parameter (for Damage and DeathCount goals, or a resource parameter (for Resource goals).",
            "syntax": "<Contributor type='HumanSoldier'>0.1</Contributor>\n<Contributor resource='Favor'>1.0</Contributor>",
            "parameters": []
          },
          {
            "name": "GoalAmount",
            "description": "Determines how much damage (for Damage goal), lost units (for DeathCount goal) or resources gathered (for Resource goal) is needed for progressing 1 reward point for the next spawn."
          },
          {
            "name": "ExcludeFromReward",
            "description": "UnitType to be excluded from potential spawn rewards. Multiple nodes can be assigned to a single goal."
          },
          {
            "name": "ExcludedTarget",
            "description": "For Damage goals, defines target unitTypes that do not contribute to reward progress when dealing damage against."
          },
          {
            "name": "SpawnLocation",
            "description": "Defines where granted spawn rewards will be spawned. Takes the following attributes:",
            "syntax": "",
            "parameters": [
              {
                "name": "type",
                "description": "Defines the spawning target type. Can be set to DamageTarget (spawns unit at target of the last damage that contributed to reward points), DamageDealer (spawns unit at last attacker that contributed to reward points), and FromBuilding (spawns unit at a building belonging to a given unitType). The first two are only applicable for Damage goals.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "landBuilding",
                "description": "If type is set to FromBuilding, defines building unitType where land- based spawn rewards will be spawned.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "waterBuilding",
                "description": "If type is set to FromBuilding, defines building unitType where water- based spawn rewards will be spawned.",
                "syntax": "<SpawnLocation type='FromBuilding' landBuilding='Temple' waterBuilding='Dock' />\n<SpawnLocation type='DamageTarget' />",
                "parameters": []
              }
            ]
          },
          {
            "name": "RewardPointCost",
            "description": "Defines the rate in which the cost for a particular resource for a given unitType will contribute to the total reward points required to spawn that unit, once it’s selected as a reward. Takes one parameter, resourceType, which sets the resource type.",
            "syntax": "<RewardPointCost resourceType='Food'>1.0</RewardPointCost>",
            "parameters": []
          },
          {
            "name": "Active",
            "description": "Defines whether goal is active or not."
          },
          {
            "name": "ForceSpawn",
            "description": "If set, selected reward will be spawned once enough reward points are obtained, even if current population cap would be exceeded."
          },
          {
            "name": "AgeRestricted",
            "description": "If set, units made available in later ages will be able to be selected as potential spawn rewards."
          },
          {
            "name": "CultureRestricted",
            "description": "If set, only units belonging to the player’s culture will be selected as potential spawn rewards."
          },
          {
            "name": "ArchaicSpawn",
            "description": "If set, any valid units for spawn reward selection made available within Archaic age will be considered as so, instead of being grouped together alongside Classical Age units."
          },
          {
            "name": "CurrentAgeOnly",
            "description": "If set, spawn reward will be selected among units available within the current age."
          },
          {
            "name": "NextAgeOnly",
            "description": "If set, spawn reward will be selected among units available within the next age."
          },
          {
            "name": "IgnoreAgeRoll",
            "description": "If set, potential spawn rewards will be selected among units available within the first age in all cases."
          },
          {
            "name": "DisplayOnHUD",
            "description": "If set, goal progress will be displayed on in-game HUD, according to data set within DisplayInfo node. Only applicable for Resource goals."
          },
          {
            "name": "DisplayInfo",
            "description": "Sets data for in-game HUD goal progress indicator, if DisplayOnHUD flag is set for a Resource goal. Takes the following parameters as children nodes:",
            "syntax": "",
            "parameters": [
              {
                "name": "DisplayNameID",
                "description": "String ID for displayed title for HUD goal progress indicator tooltip.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "RolloverID",
                "description": "String ID for rollover for HUD goal progress indicator tooltip.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "ProgressTooltipID",
                "description": "String ID for formatted progress string for HUD goal progress indicator tooltip.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "NextUnitTooltipID",
                "description": "String ID for formatted string listing next unit to be spawned for HUD goal progress indicator tooltip.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "ProgressType",
                "description": "Progress bar type. Can be set to Default (same color as age-up circular progress bar), ShieldBlessing (blue circular progress bar) or SpawnReward (green circular progress bar).",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "Icon",
                "description": "HUD goal progress indicator icon, relative to game\\ui_myth\\resources.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "NotificationSound",
                "description": "Sound to be played when a unit is successfully spawned.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "NotificationMessageID",
                "description": "Formatted notification message to be displayed when a unit is successfully spawned.",
                "syntax": "",
                "parameters": []
              }
            ]
          }
        ]
      },
      {
        "name": "BountyResourceEarning",
        "description": "Sets data for resource generation based on damage dealt or units killed. Takes the following parameters as children nodes:",
        "syntax": "",
        "parameters": [
          {
            "name": "Active",
            "description": "Sets whether the mechanic is to be active or not."
          },
          {
            "name": "ExcludedTarget",
            "description": "Adds a unitType to be excluded from resource generation when dealing damage against or destroying."
          },
          {
            "name": "BountyDamageGoal",
            "description": "Amount of total damage to be inflicted in order to earn the full resource reward for damage defined for the current attacker through BountyReward data."
          },
          {
            "name": "BountyReductionStart",
            "description": "When generating Favor, determines how much resources need to be collected for generation rate to be reduced."
          },
          {
            "name": "BountyReductionEnd",
            "description": "When generating Favor, determines how much resources need to be collected for the maximum reduction rate defined through the BountyReductionStrength attribute to be applied."
          },
          {
            "name": "BountyReductionStrength",
            "description": "When generating Favor, determines the maximum reduction rate to be applied over generated resources when the amount of generated Favor reaches BountyReductionEnd. The reduction rate to be applied grows linearly once generating the amount of favor defined in BountyReductionStart up until reaching the maximum value."
          },
          {
            "name": "BountyReward",
            "description": "Defines resource generation data for a particular unitType. Takes the following attributes:",
            "syntax": "",
            "parameters": [
              {
                "name": "unitType",
                "description": "Reference UnitType for this entry.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "protoUnit",
                "description": "Reference UnitType for this entry.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "resourceType",
                "description": "Resource type for this entry.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "condition",
                "description": "Resource generation condition. Can be set do Damage or Destroy. When set to Damage, defines how much resources of the provided resource type units of the aforementioned unitType will generate once total damage dealt by them reaches the value set on BountyDamageGoal. When set to Destroy, determines how much resources will be obtained when destroying an enemy unit belonging to the aforementioned unitType.",
                "syntax": "<BountyReward unitType='Ship' condition='Damage' resourceType='Favor'>0.5</BountyReward>\n<BountyReward unitType='House' resourceType='Wood' condition='Destroy'>25.0</BountyReward>",
                "parameters": []
              }
            ]
          },
          {
            "name": "BountyTargetMultiplier",
            "description": "Defines multiplier to be applied over resources obtained from dealing damage against a particular unitType. Takes the following parameters:",
            "syntax": "",
            "parameters": [
              {
                "name": "unitType",
                "description": "Target UnitType this multiplier is intended to be applied to.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "protoUnit",
                "description": "Target UnitType this multiplier is intended to be applied to.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "resourceType",
                "description": "Resource type to be affected by multiplier.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "condition",
                "description": "Should be always set to Damage, as this is not applicable to on-destroy resource generation.",
                "syntax": "<BountyTargetMultiplier unitType='Building' condition='Damage' resourceType='Favor'>0.1</BountyTargetMultiplier>",
                "parameters": []
              }
            ]
          },
          {
            "name": "VFX",
            "description": "VFX protoUnit to be spawned when generating resources either through dealing damage or destroying valid targets."
          }
        ]
      },
      {
        "name": "TimeShifting",
        "description": "Sets data for time shifting mechanic. Takes one parameter, maxConcurrentTimeShifts, which defines the maximum amount of buildings that can be timeshifted at a time. Valid time shifting targets are defined by ProtoUnit children nodes, which take the following parameters:",
        "syntax": "",
        "parameters": [
          {
            "name": "costRatio",
            "description": "Time shifting cost ratio according to building’s cost."
          },
          {
            "name": "timeRatio",
            "description": "Time shifting duration ratio according to building’s build points.",
            "syntax": "<TimeShifting maxConcurrentTimeShifts='1'>\n<ProtoUnit costRatio='0.0' timeRatio='0.50'>Manor</ProtoUnit>\n<ProtoUnit costRatio='0.50' timeRatio='0.667'>Palace</ProtoUnit>\n</TimeShifting>",
            "parameters": []
          }
        ]
      },
      {
        "name": "BuildingChain",
        "description": "Sets data for building chain mechanic, as used for Chinese culture favor generation. Takes the following children nodes:",
        "syntax": "",
        "parameters": [
          {
            "name": "Anchor",
            "description": "Sets a unitType for triggering chain resource generation logic: any building connected to a building that belongs to a unit type set as Anchor, either directly or indirectly, will be considered as part of the chain and will generate resources. Takes one parameter, vfx, which sets the VFX protoUnit to be displayed once an anchor building is selected.",
            "syntax": "<Anchor vfx='VFXFavorGlow'>AbstractSocketedTownCenter</Anchor>",
            "parameters": []
          },
          {
            "name": "ChainableBuilding",
            "description": "Defines a valid building for building chain. Takes two parameters, chainRadius, which defines the radius for linking/connecting this building with other buildings, and generationResource, which defines the resource that will be generated by tiles covered by this building once linked to an anchor building.",
            "syntax": "<ChainableBuilding generationResource='Favor' chainRadius='20.0'>TownCenter</ChainableBuilding>",
            "parameters": []
          },
          {
            "name": "ResourceGeneration",
            "description": "Defines tiered resource generation rate data for building chain system. Each tier is defined by a TileRatePerMinuteTier child one, which sets the resource generation rate per tile per tier, and can take the following parameters",
            "syntax": "",
            "parameters": [
              {
                "name": "resource",
                "description": "Resource type for resource generation.",
                "syntax": "",
                "parameters": []
              },
              {
                "name": "minTiles",
                "description": "Minimum amount of tiles for the provided per-tile resource generation rate to be used for tiles covered by buildings linked to an anchor building.",
                "syntax": "<ResourceGeneration>\n<TileRatePerMinuteTier resource='Favor' minTiles='0'>0.0125</TileRatePerMinuteTier>\n<TileRatePerMinuteTier resource='Favor' minTiles='750'>0.01</TileRatePerMinuteTier>\n</ResourceGeneration>",
                "parameters": []
              }
            ]
          },
          {
            "name": "AbundanceVFX",
            "description": "Sets VFX data for Abundance effect, defining the protoUnits for VFX to be spawned when depositing resources over dropsites affected by Abundance effect (i.e. DropsiteRate modification applied for dropsites within Building Chain). Takes three attributes, small, medium and large to be spawned for buildings with obstruction radius over the X axis lesser than or equal to 2, greater than 2, or greater than or equal to 5, respectively.",
            "syntax": "<AbundanceVFX small='VFXAbundanceSmall' medium='VFXAbundanceMedium' large='VFXAbundanceLarge' />",
            "parameters": []
          },
          {
            "name": "AutoBuildVFX",
            "description": "Sets VFX data for Auto-Build effect, defining the protoUnits for VFX to be spawned foundations being auto-build within Building Chain radius. Takes three attributes, small, medium and large to be spawned for buildings with obstruction radius over the X axis lesser than or equal to 2, greater than 2, or greater than or equal to 5, respectively.",
            "syntax": "<AutoBuildVFX small='VFXAutoBuild' medium='VFXAutoBuild' large='VFXAutoBuild' />",
            "parameters": []
          }
        ]
      }
    ],
    "Non-Civilization Attributes": [
      {
        "name": "DefaultPopLimit",
        "description": "Default base population limit."
      },
      {
        "name": "DefaultContainedRegenRate",
        "description": "Default percentage-based regeneration rate for garrisoned units within buildings."
      },
      {
        "name": "DefaultRepairFactor",
        "description": "Default repair cost factor to be used if no valid building repair factor is set within civilization data."
      },
      {
        "name": "LightningTech",
        "description": "Global technology to be applied when in Lightning game mode, regardless of selected civilization."
      },
      {
        "name": "DeathMatchTech",
        "description": "Global technology to be applied when in Death Match game mode, regardless of selected civilization."
      },
      {
        "name": "StoryModeTech",
        "description": "Technology to be applied for human player when playing a Campaign scenario in Story Mode."
      },
      {
        "name": "LudicrousModeTech",
        "description": "Technology to be applied for AI players when playing a Campaign scenario in Ludicrous Mode."
      },
      {
        "name": "DeathMatchPowerGrantDelay",
        "description": "Defines the delay in milliseconds before the first usage of a granted God Power is available in Death Match mode for each age. Takes children nodes set to the internal age names for defining the delay for a given age.",
        "syntax": "<DeathMatchPowerGrantDelay>\n<ArchaicAge>80</ArchaicAge>\n<ClassicalAge>140</ClassicalAge>\n<HeroicAge>200</HeroicAge>\n<MythicAge>260</MythicAge>\n</DeathMatchPowerGrantDelay>",
        "parameters": []
      }
    ]
  },
  "TechTree Core Data": {
    "Attributes": [
      {
        "name": "DisplayNameID",
        "description": "String ID for the technology displayed name."
      },
      {
        "name": "Cost",
        "description": "Technology cost. Takes one parameter, resourcetype, which sets the resource type for each entry."
      },
      {
        "name": "ResearchPoints",
        "description": "Total amount of time in seconds required to research the technology."
      },
      {
        "name": "ResearchLimit",
        "description": "Number of times in which the technology can be researched. Set to 1 by default."
      },
      {
        "name": "Status",
        "description": "Initial availability status of the technology. Can be set to UNOBTAINABLE, OBTAINABLE or ACTIVE."
      },
      {
        "name": "TechType",
        "description": "Assigns a technology type. Valid technology types are defined in game\\data\\gameplay\\tech_types.xml."
      },
      {
        "name": "Icon",
        "description": "WPF path for technology icon, relative to game\\ui_myth."
      },
      {
        "name": "RolloverTextID",
        "description": "String ID for the technology long rollover."
      },
      {
        "name": "AdvancedRolloverTextOverrideID",
        "description": "String ID for advanced effect rollover override."
      },
      {
        "name": "ValueText",
        "description": "Value text to be displayed over technologies, akin to the ones used in protoUnitCommands. Supports the same data fetchers as the ones supported by protoUnitCommands. Requires the technology flag DEUsesValueText to be set for proper functionality."
      },
      {
        "name": "Delay",
        "description": "Delay for applying technology effects in seconds, as soon as tech status is set or toggled into active. Only applicable for auto-activable techs."
      },
      {
        "name": "InitialDelay",
        "description": "Delay for applying technology effects in seconds for first tech activation, as soon as tech status is set or toggled into active. Only applicable for auto-activable techs."
      },
      {
        "name": "TechAge",
        "description": "Age to be used for activating this tech for Scenario starting age logic."
      }
    ],
    "Flags": [
      {
        "name": "Volatile",
        "description": "Denotes a technology that’s meant to be automatically activated once its prerequisites are met."
      },
      {
        "name": "AlwaysShowButton",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ExcludeFromPlaytest",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "DynamicCost",
        "description": "Causes the technology cost to scale according to the number of enemy units present on the map."
      },
      {
        "name": "AgeUpgrade",
        "description": "Denotes a technology to be used for minor god selection."
      },
      {
        "name": "HideFromDialogs",
        "description": "If set, technology won’t be listed in advanced rollovers, nor over available and applied research listings in in-game help dialogues."
      },
      {
        "name": "HideAllNotifications",
        "description": "Denotes technologies that aren’t supposed to be counted for the total numbers of researches of a player, nor be shown in the UI or generating notifications or effect text upon research."
      },
      {
        "name": "UpgradeTech",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "TeamTech",
        "description": "Causes the effect of the technology to be applied to the entire team of the player who researched it."
      },
      {
        "name": "OrPrereqs",
        "description": "Causes the prerequisites of a technology to be processed using OR logic, allowing the technology to be made available as soon as at least one of the tech prerequisites are met."
      },
      {
        "name": "CountsTowardEconomicScore",
        "description": "Causes the technology to count toward economic score once researched."
      },
      {
        "name": "CountsTowardMilitaryScore",
        "description": "Causes the technology to count toward military score once researched."
      },
      {
        "name": "DoNotQueue",
        "description": "Allows the technology to override and ignore the building queue to be researched."
      },
      {
        "name": "InfiniteTech",
        "description": "Self-explanatory."
      },
      {
        "name": "AlwaysDisableButtonInGrid",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "ForceUnapply",
        "description": "Forces the technology to be reverted once it’s set to Unobtainable status."
      },
      {
        "name": "NoTextMessage",
        "description": "Causes the technology to not generate notifications upon research, but still be able to display text through text output effects and be counted among a player’s researched technologies."
      },
      {
        "name": "UsesValueText",
        "description": "Allows a technology to display value text."
      },
      {
        "name": "DoNotAllowDuringNoRush",
        "description": "Forbids a technology from being researched while Ceasefire is active."
      },
      {
        "name": "HideAdvancedRollover",
        "description": "Causes advanced effect information to not be shown for the technology."
      },
      {
        "name": "Reversible",
        "description": "For technologies with the Volatile flag set, ensures their effects are reverted once their prereqs are no longer met, while allowing them to be re-activated once their prereqs are once again met."
      },
      {
        "name": "ForceCostUpdate",
        "description": "Unused and deprecated.",
        "deprecated": true
      },
      {
        "name": "PlayerTechCostAbsolute",
        "description": "Used for TechCostAbsolute data effect logic."
      },
      {
        "name": "DESetObtainableIfFailed",
        "description": "If set, technology will become obtainable and re-researchable, in case its effects have failed to be applied."
      },
      {
        "name": "Persistent",
        "description": "For technologies with the Volatile flag set, after their prereqs are no longer met, allow them to be re-applied when their prereqs return to a met state."
      },
      {
        "name": "AgeTech",
        "description": "Denotes a technology that holds generic/general effects to be applied for a given culture or major god, when reaching a specific age, regardless of the chosen minor god."
      },
      {
        "name": "MythTech",
        "description": "If set, technology will display purple border of mythical upgrades."
      },
      {
        "name": "Titans",
        "description": "If set, technology will not be available if ‘Allow Titans’ is set to be disabled within lobby settings."
      },
      {
        "name": "DelayedFirstActivation",
        "description": "If set, delay will be accounted for the first activation of this tech."
      },
      {
        "name": "ExcludeFromKBCostTracking",
        "description": "If set, technology won’t be accounted for KB tracking of a player’s total research cost."
      },
      {
        "name": "IgnoreIfAutoActivated",
        "description": "If set, this technology won’t be accounted for OnTechResearchedTech handling if it has been auto-activated."
      },
      {
        "name": "MultipleActivation",
        "description": "For technologies with the Volatile and Persistent flags set, once the technology has no longer its prereqs met, allows it to be reactivated multiple times, while obeying any delays set within technology data, until the technology prereqs are once again met."
      },
      {
        "name": "NeverAutoResearch",
        "description": "Prevents technology from being auto-researched if its researchPoints are set to zero, or when setting a player’s starting age to an age higher than the one it’s made available in."
      },
      {
        "name": "IgnoreForUIAgeAvailabity",
        "description": "Causes this technology to be ignored for the logic used to determine the age in which units or technologies are meant to be available."
      },
      {
        "name": "IgnoreForPreloading",
        "description": "Causes this technology to be ignored for determining which unit assets need to be preloaded."
      },
      {
        "name": "ForceUnapplyIfActive",
        "description": "Forces the technology to be reverted once it’s set to Unobtainable status, if and only if its previous state was Active."
      }
    ]
  }
}